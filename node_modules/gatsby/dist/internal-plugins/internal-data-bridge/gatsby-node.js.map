{"version":3,"sources":["../../../src/internal-plugins/internal-data-bridge/gatsby-node.js"],"names":["crypto","require","moment","chokidar","systemPath","_","emitter","boundActionCreators","getNode","transformPackageJson","json","transformDeps","deps","entries","map","name","version","pick","dependencies","devDependencies","peerDependencies","optionalDependecies","bundledDependecies","createPageId","path","exports","sourceNodes","actions","store","createNode","state","getState","program","flattenedPlugins","page","id","parent","children","internal","type","contentDigest","createHash","update","JSON","stringify","digest","forEach","plugin","pluginFilepath","resolve","packageJson","buildTime","subtract","process","uptime","toJSON","createGatsbyConfigNode","config","configCopy","plugins","node","siteMetadata","port","host","pathToGatsbyConfig","join","directory","watch","on","oldCache","cache","e","undefined","onCreatePage","updatedAt","pageWithoutUpdated","description","pluginCreatorId","action","nodeId","payload","deleteNode"],"mappings":"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","sourcesContent":["const crypto = require(`crypto`)\nconst moment = require(`moment`)\nconst chokidar = require(`chokidar`)\nconst systemPath = require(`path`)\nconst _ = require(`lodash`)\n\nconst { emitter } = require(`../../redux`)\nconst { boundActionCreators } = require(`../../redux/actions`)\nconst { getNode } = require(`../../db/nodes`)\n\nfunction transformPackageJson(json) {\n  const transformDeps = deps =>\n    _.entries(deps).map(([name, version]) => {\n      return {\n        name,\n        version,\n      }\n    })\n\n  json = _.pick(json, [\n    `name`,\n    `description`,\n    `version`,\n    `main`,\n    `keywords`,\n    `author`,\n    `license`,\n    `dependencies`,\n    `devDependencies`,\n    `peerDependencies`,\n    `optionalDependecies`,\n    `bundledDependecies`,\n  ])\n  json.dependencies = transformDeps(json.dependencies)\n  json.devDependencies = transformDeps(json.devDependencies)\n  json.peerDependencies = transformDeps(json.peerDependencies)\n  json.optionalDependecies = transformDeps(json.optionalDependecies)\n  json.bundledDependecies = transformDeps(json.bundledDependecies)\n\n  return json\n}\n\nconst createPageId = path => `SitePage ${path}`\n\nexports.sourceNodes = ({ actions, store }) => {\n  const { createNode } = actions\n  const state = store.getState()\n  const { program } = state\n  const { flattenedPlugins } = state\n\n  // Add our default development page since we know it's going to\n  // exist and we need a node to exist so its query works :-)\n  const page = { path: `/dev-404-page/` }\n  createNode({\n    ...page,\n    id: createPageId(page.path),\n    parent: `SOURCE`,\n    children: [],\n    internal: {\n      type: `SitePage`,\n      contentDigest: crypto\n        .createHash(`md5`)\n        .update(JSON.stringify(page))\n        .digest(`hex`),\n    },\n  })\n\n  flattenedPlugins.forEach(plugin => {\n    plugin.pluginFilepath = plugin.resolve\n    createNode({\n      ...plugin,\n      packageJson: transformPackageJson(\n        require(`${plugin.resolve}/package.json`)\n      ),\n      parent: `SOURCE`,\n      children: [],\n      internal: {\n        contentDigest: crypto\n          .createHash(`md5`)\n          .update(JSON.stringify(plugin))\n          .digest(`hex`),\n        type: `SitePlugin`,\n      },\n    })\n  })\n\n  // Add site node.\n  const buildTime = moment()\n    .subtract(process.uptime(), `seconds`)\n    .toJSON()\n\n  const createGatsbyConfigNode = (config = {}) => {\n    // Delete plugins from the config as we add plugins above.\n    const configCopy = { ...config }\n    delete configCopy.plugins\n    const node = {\n      siteMetadata: {\n        ...configCopy.siteMetadata,\n      },\n      port: state.program.port,\n      host: state.program.host,\n      ...configCopy,\n      buildTime,\n    }\n    createNode({\n      ...node,\n      id: `Site`,\n      parent: `SOURCE`,\n      children: [],\n      internal: {\n        contentDigest: crypto\n          .createHash(`md5`)\n          .update(JSON.stringify(node))\n          .digest(`hex`),\n        type: `Site`,\n      },\n    })\n  }\n\n  createGatsbyConfigNode(state.config)\n\n  const pathToGatsbyConfig = systemPath.join(\n    program.directory,\n    `gatsby-config.js`\n  )\n  chokidar.watch(pathToGatsbyConfig).on(`change`, () => {\n    const oldCache = require.cache[require.resolve(pathToGatsbyConfig)]\n    try {\n      // Delete require cache so we can reload the module.\n      delete require.cache[require.resolve(pathToGatsbyConfig)]\n      const config = require(pathToGatsbyConfig)\n      createGatsbyConfigNode(config)\n    } catch (e) {\n      // Restore the old cache since requiring the new gatsby-config.js failed.\n      if (oldCache !== undefined) {\n        require.cache[require.resolve(pathToGatsbyConfig)] = oldCache\n      }\n    }\n  })\n}\n\nexports.onCreatePage = ({ page, actions }) => {\n  const { createNode } = actions\n  // eslint-disable-next-line\n  const { updatedAt, ...pageWithoutUpdated } = page\n\n  // Add page.\n  createNode({\n    ...pageWithoutUpdated,\n    id: createPageId(page.path),\n    parent: `SOURCE`,\n    children: [],\n    internal: {\n      type: `SitePage`,\n      contentDigest: crypto\n        .createHash(`md5`)\n        .update(JSON.stringify(pageWithoutUpdated))\n        .digest(`hex`),\n      description:\n        page.pluginCreatorId === `Plugin default-site-plugin`\n          ? `Your site's \"gatsby-node.js\"`\n          : page.pluginCreatorId,\n    },\n  })\n}\n\n// Listen for DELETE_PAGE and delete page nodes.\nemitter.on(`DELETE_PAGE`, action => {\n  const nodeId = createPageId(action.payload.path)\n  const node = getNode(nodeId)\n  boundActionCreators.deleteNode({ node })\n})\n"],"file":"gatsby-node.js"}