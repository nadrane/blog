{"version":3,"sources":["../../../src/bootstrap/load-plugins/index.js"],"names":["_","require","store","nodeAPIs","browserAPIs","ssrAPIs","loadPlugins","collatePluginAPIs","handleBadExports","handleMultipleReplaceRenderers","apis","node","keys","browser","ssr","flattenPlugins","plugins","flattened","extractPlugins","plugin","pluginOptions","forEach","subPlugin","push","module","exports","config","flattenedPlugins","x","apiToPlugins","badExports","dispatch","type","payload"],"mappings":";;;;;;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;iBAEkBA,OAAO,CAAE,aAAF,C;MAAjBC,K,YAAAA,K;;AACR,MAAMC,QAAQ,GAAGF,OAAO,CAAE,2BAAF,CAAxB;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAE,8BAAF,CAA3B;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAE,iCAAF,CAAvB;;AACA,MAAMK,WAAW,GAAGL,OAAO,CAAE,QAAF,CAA3B;;kBAKIA,OAAO,CAAE,YAAF,C;MAHTM,iB,aAAAA,iB;MACAC,gB,aAAAA,gB;MACAC,8B,aAAAA,8B;;AAGF,MAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAEX,CAAC,CAACY,IAAF,CAAOT,QAAP,CADK;AAEXU,EAAAA,OAAO,EAAEb,CAAC,CAACY,IAAF,CAAOR,WAAP,CAFE;AAGXU,EAAAA,GAAG,EAAEd,CAAC,CAACY,IAAF,CAAOP,OAAP,CAHM,CAMb;AACA;AACA;;AARa,CAAb;;AASA,MAAMU,cAAc,GAAGC,OAAO,IAAI;AAChC,QAAMC,SAAS,GAAG,EAAlB;;AACA,QAAMC,cAAc,GAAGC,MAAM,IAAI;AAC/BA,IAAAA,MAAM,CAACC,aAAP,CAAqBJ,OAArB,CAA6BK,OAA7B,CAAqCC,SAAS,IAAI;AAChDL,MAAAA,SAAS,CAACM,IAAV,CAAeD,SAAf;AACAJ,MAAAA,cAAc,CAACI,SAAD,CAAd;AACD,KAHD;AAID,GALD;;AAOAN,EAAAA,OAAO,CAACK,OAAR,CAAgBF,MAAM,IAAI;AACxBF,IAAAA,SAAS,CAACM,IAAV,CAAeJ,MAAf;AACAD,IAAAA,cAAc,CAACC,MAAD,CAAd;AACD,GAHD;AAKA,SAAOF,SAAP;AACD,CAfD;;AAiBAO,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA,6CAAiB,WAAOC,MAAM,GAAG,EAAhB,EAAuB;AACtC;AACA,UAAMV,OAAO,GAAGV,WAAW,CAACoB,MAAD,CAA3B,CAFsC,CAItC;;AACA,QAAIC,gBAAgB,GAAGZ,cAAc,CAACC,OAAD,CAArC,CALsC,CAOtC;AACA;;AACA,UAAMY,CAAC,GAAGrB,iBAAiB,CAAC;AAAEG,MAAAA,IAAF;AAAQiB,MAAAA;AAAR,KAAD,CAA3B;AACAA,IAAAA,gBAAgB,GAAGC,CAAC,CAACD,gBAArB;AACA,UAAME,YAAY,GAAGD,CAAC,CAACC,YAAvB;AACA,UAAMC,UAAU,GAAGF,CAAC,CAACE,UAArB,CAZsC,CActC;;AACAtB,IAAAA,gBAAgB,CAAC;AAAEE,MAAAA,IAAF;AAAQoB,MAAAA;AAAR,KAAD,CAAhB,CAfsC,CAiBtC;;AACAH,IAAAA,gBAAgB,GAAGlB,8BAA8B,CAAC;AAChDoB,MAAAA,YADgD;AAEhDF,MAAAA;AAFgD,KAAD,CAAjD,CAlBsC,CAuBtC;;AACAzB,IAAAA,KAAK,CAAC6B,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAG,4BADM;AAEbC,MAAAA,OAAO,EAAEN;AAFI,KAAf;AAKAzB,IAAAA,KAAK,CAAC6B,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAG,yBADM;AAEbC,MAAAA,OAAO,EAAEJ;AAFI,KAAf,EA7BsC,CAkCtC;;AACA3B,IAAAA,KAAK,CAAC6B,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAG,kBADM;AAEbC,MAAAA,OAAO,EAAEjB;AAFI,KAAf;AAKA,WAAOW,gBAAP;AACD,GAzCD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const _ = require(`lodash`)\n\nconst { store } = require(`../../redux`)\nconst nodeAPIs = require(`../../utils/api-node-docs`)\nconst browserAPIs = require(`../../utils/api-browser-docs`)\nconst ssrAPIs = require(`../../../cache-dir/api-ssr-docs`)\nconst loadPlugins = require(`./load`)\nconst {\n  collatePluginAPIs,\n  handleBadExports,\n  handleMultipleReplaceRenderers,\n} = require(`./validate`)\n\nconst apis = {\n  node: _.keys(nodeAPIs),\n  browser: _.keys(browserAPIs),\n  ssr: _.keys(ssrAPIs),\n}\n\n// Create a \"flattened\" array of plugins with all subplugins\n// brought to the top-level. This simplifies running gatsby-* files\n// for subplugins.\nconst flattenPlugins = plugins => {\n  const flattened = []\n  const extractPlugins = plugin => {\n    plugin.pluginOptions.plugins.forEach(subPlugin => {\n      flattened.push(subPlugin)\n      extractPlugins(subPlugin)\n    })\n  }\n\n  plugins.forEach(plugin => {\n    flattened.push(plugin)\n    extractPlugins(plugin)\n  })\n\n  return flattened\n}\n\nmodule.exports = async (config = {}) => {\n  // Collate internal plugins, site config plugins, site default plugins\n  const plugins = loadPlugins(config)\n\n  // Create a flattened array of the plugins\n  let flattenedPlugins = flattenPlugins(plugins)\n\n  // Work out which plugins use which APIs, including those which are not\n  // valid Gatsby APIs, aka 'badExports'\n  const x = collatePluginAPIs({ apis, flattenedPlugins })\n  flattenedPlugins = x.flattenedPlugins\n  const apiToPlugins = x.apiToPlugins\n  const badExports = x.badExports\n\n  // Show errors for any non-Gatsby APIs exported from plugins\n  handleBadExports({ apis, badExports })\n\n  // Show errors when ReplaceRenderer has been implemented multiple times\n  flattenedPlugins = handleMultipleReplaceRenderers({\n    apiToPlugins,\n    flattenedPlugins,\n  })\n\n  // If we get this far, everything looks good. Update the store\n  store.dispatch({\n    type: `SET_SITE_FLATTENED_PLUGINS`,\n    payload: flattenedPlugins,\n  })\n\n  store.dispatch({\n    type: `SET_SITE_API_TO_PLUGINS`,\n    payload: apiToPlugins,\n  })\n\n  // TODO: Is this used? plugins and flattenedPlugins may be out of sync\n  store.dispatch({\n    type: `SET_SITE_PLUGINS`,\n    payload: plugins,\n  })\n\n  return flattenedPlugins\n}\n"],"file":"index.js"}