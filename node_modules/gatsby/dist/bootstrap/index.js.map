{"version":3,"sources":["../../src/bootstrap/index.js"],"names":["_","require","slash","fs","md5File","crypto","del","path","convertHrtime","Promise","apiRunnerNode","mergeGatsbyConfig","graphql","store","emitter","loadPlugins","report","getConfigFile","tracer","globalTracer","preferDefault","process","on","reason","p","panic","extractQueries","runInitialQueries","queryQueue","writePages","writeRedirects","module","exports","args","spanArgs","parentSpan","childOf","bootstrapSpan","startSpan","program","directory","dispatch","type","payload","activity","activityTimer","start","config","__experimentalThemes","themesConfig","mapSeries","themeName","themeConfig","theme","themeConfigObj","isFunction","plugins","resolve","options","reduce","polyfill","warn","end","flattenedPlugins","span","pluginVersions","map","version","hashes","all","catch","pluginsHash","createHash","update","JSON","stringify","concat","digest","state","getState","oldPluginsHash","status","PLUGINS_HASH","info","stripIndent","remove","e","error","ensureDir","srcDir","__dirname","siteDir","tryRequire","copy","clobber","ensureDirSync","emptyDir","err","hasAPIFile","env","plugin","skipSSR","undefined","envAPIs","name","join","Array","isArray","length","ssrPlugins","filter","pluginOptions","browserPlugins","browserPluginsRequires","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","extensions","apiResults","traceId","flattenDeep","graphqlRunner","query","context","schema","waitForCascadingActions","printConflicts","NODE_ENV","startQueries","hrtime","stats","getStats","setStatus","total","peak","seconds","toFixed","checkJobsDone","debounce","jobs","active","log","uptime","then","finish","emit"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst _ = require(`lodash`)\nconst slash = require(`slash`)\nconst fs = require(`fs-extra`)\nconst md5File = require(`md5-file/promise`)\nconst crypto = require(`crypto`)\nconst del = require(`del`)\nconst path = require(`path`)\nconst convertHrtime = require(`convert-hrtime`)\nconst Promise = require(`bluebird`)\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst mergeGatsbyConfig = require(`../utils/merge-gatsby-config`)\nconst { graphql } = require(`graphql`)\nconst { store, emitter } = require(`../redux`)\nconst loadPlugins = require(`./load-plugins`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst getConfigFile = require(`./get-config-file`)\nconst tracer = require(`opentracing`).globalTracer()\nconst preferDefault = require(`./prefer-default`)\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason, p) => {\n  report.panic(reason)\n})\n\nconst {\n  extractQueries,\n} = require(`../internal-plugins/query-runner/query-watcher`)\nconst {\n  runInitialQueries,\n} = require(`../internal-plugins/query-runner/page-query-runner`)\nconst queryQueue = require(`../internal-plugins/query-runner/query-queue`)\nconst { writePages } = require(`../internal-plugins/query-runner/pages-writer`)\nconst {\n  writeRedirects,\n} = require(`../internal-plugins/query-runner/redirects-writer`)\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`./log-line-function`)\n\ntype BootstrapArgs = {\n  directory: string,\n  prefixPaths?: boolean,\n  parentSpan: Object,\n}\n\nmodule.exports = async (args: BootstrapArgs) => {\n  const spanArgs = args.parentSpan ? { childOf: args.parentSpan } : {}\n  const bootstrapSpan = tracer.startSpan(`bootstrap`, spanArgs)\n\n  const program = {\n    ...args,\n    // Fix program directory path for windows env.\n    directory: slash(args.directory),\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  // Try opening the site's gatsby-config.js file.\n  let activity = report.activityTimer(`open and validate gatsby-configs`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  let config = await preferDefault(\n    getConfigFile(program.directory, `gatsby-config`)\n  )\n\n  // theme gatsby configs can be functions or objects\n  if (config && config.__experimentalThemes) {\n    const themesConfig = await Promise.mapSeries(\n      config.__experimentalThemes,\n      async ([themeName, themeConfig]) => {\n        const theme = await preferDefault(\n          getConfigFile(themeName, `gatsby-config`)\n        )\n        // if theme is a function, call it with the themeConfig\n        let themeConfigObj = theme\n        if (_.isFunction(theme)) {\n          themeConfigObj = theme(themeConfig)\n        }\n        // themes function as plugins too (gatsby-node, etc)\n        return {\n          ...themeConfigObj,\n          plugins: [\n            ...(themeConfigObj.plugins || []),\n            // theme plugin is last so it's gatsby-node, etc can override it's declared plugins, like a normal site.\n            { resolve: themeName, options: themeConfig },\n          ],\n        }\n      }\n    ).reduce(mergeGatsbyConfig, {})\n\n    config = mergeGatsbyConfig(themesConfig, config)\n  }\n\n  if (config && config.polyfill) {\n    report.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  store.dispatch({\n    type: `SET_SITE_CONFIG`,\n    payload: config,\n  })\n\n  activity.end()\n\n  activity = report.activityTimer(`load plugins`)\n  activity.start()\n  const flattenedPlugins = await loadPlugins(config)\n  activity.end()\n\n  // onPreInit\n  activity = report.activityTimer(`onPreInit`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span })\n  activity.end()\n\n  // Delete html and css files from the public directory as we don't want\n  // deleted pages and styles from previous builds to stick around.\n  activity = report.activityTimer(\n    `delete html and css files from previous builds`,\n    {\n      parentSpan: bootstrapSpan,\n    }\n  )\n  activity.start()\n  await del([\n    `public/*.{html,css}`,\n    `public/**/*.{html,css}`,\n    `!public/static`,\n    `!public/static/**/*.{html,css}`,\n  ])\n  activity.end()\n\n  activity = report.activityTimer(`initialize cache`)\n  activity.start()\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const hashes = await Promise.all([\n    md5File(`package.json`),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-config.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-node.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n  ])\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n  let state = store.getState()\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    report.info(report.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's not any stale\n      data\n    `)\n  }\n\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash) {\n    try {\n      await fs.remove(`${program.directory}/.cache`)\n    } catch (e) {\n      report.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  await fs.ensureDir(`${program.directory}/.cache`)\n\n  // Ensure the public/static directory\n  await fs.ensureDir(`${program.directory}/public/static`)\n\n  activity.end()\n\n  // Copy our site files to the root of the site.\n  activity = report.activityTimer(`copy gatsby files`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = `${program.directory}/.cache`\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir, {\n      clobber: true,\n    })\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`, {\n      clobber: true,\n    })\n    await fs.ensureDirSync(`${program.directory}/.cache/json`)\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${program.directory}/.cache/fragments`)\n  } catch (err) {\n    report.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin) => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n\n    // Always include the site's gatsby-browser.js if it exists as it's\n    // a handy place to include global styles and other global imports.\n    try {\n      if (env === `browser` && plugin.name === `default-site-plugin`) {\n        return slash(\n          require.resolve(path.join(plugin.resolve, `gatsby-${env}`))\n        )\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      return slash(path.join(plugin.resolve, `gatsby-${env}`))\n    }\n    return undefined\n  }\n\n  const ssrPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPluginsRequires = browserPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    report.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = report.activityTimer(`onPreBootstrap`)\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`)\n  activity.end()\n\n  // Source nodes\n  activity = report.activityTimer(`source and transform nodes`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../utils/source-nodes`)({ parentSpan: activity.span })\n  activity.end()\n\n  // Create Schema.\n  activity = report.activityTimer(`building schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`)({ parentSpan: activity.span })\n  activity.end()\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.mjs`, `.js`, `.jsx`, `.wasm`, `.json`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan: bootstrapSpan,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const graphqlRunner = (query, context = {}) => {\n    const schema = store.getState().schema\n    return graphql(schema, query, context, context, context)\n  }\n\n  // Collect pages.\n  activity = report.activityTimer(`createPages`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`createPages`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPages`,\n    waitForCascadingActions: true,\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  // A variant on createPages for plugins that want to\n  // have full control over adding/removing pages. The normal\n  // \"createPages\" API is called every time (during development)\n  // that data changes.\n  activity = report.activityTimer(`createPagesStatefully`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`createPagesStatefully`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPagesStatefully`,\n    waitForCascadingActions: true,\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  activity = report.activityTimer(`onPreExtractQueries`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreExtractQueries`, { parentSpan: activity.span })\n  activity.end()\n\n  // Update Schema for SitePage.\n  activity = report.activityTimer(`update schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`)({ parentSpan: activity.span })\n  activity.end()\n\n  require(`../schema/type-conflict-reporter`).printConflicts()\n\n  // Extract queries\n  activity = report.activityTimer(`extract queries from components`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await extractQueries()\n  activity.end()\n\n  // Start the createPages hot reloader.\n  if (process.env.NODE_ENV !== `production`) {\n    require(`./page-hot-reloader`)(graphqlRunner)\n  }\n\n  // Run queries\n  activity = report.activityTimer(`run graphql queries`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const startQueries = process.hrtime()\n  queryQueue.on(`task_finish`, () => {\n    const stats = queryQueue.getStats()\n    activity.setStatus(\n      `${stats.total}/${stats.peak} ${(\n        stats.total / convertHrtime(process.hrtime(startQueries)).seconds\n      ).toFixed(2)} queries/second`\n    )\n  })\n  await runInitialQueries(activity)\n  activity.end()\n\n  // Write out files.\n  activity = report.activityTimer(`write out page data`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  try {\n    await writePages()\n  } catch (err) {\n    report.panic(`Failed to write out page data`, err)\n  }\n  activity.end()\n\n  // Write out redirects.\n  activity = report.activityTimer(`write out redirect data`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await writeRedirects()\n  activity.end()\n\n  const checkJobsDone = _.debounce(resolve => {\n    const state = store.getState()\n    if (state.jobs.active.length === 0) {\n      report.log(``)\n      report.info(`bootstrap finished - ${process.uptime()} s`)\n      report.log(``)\n\n      // onPostBootstrap\n      activity = report.activityTimer(`onPostBootstrap`, {\n        parentSpan: bootstrapSpan,\n      })\n      activity.start()\n      apiRunnerNode(`onPostBootstrap`, { parentSpan: activity.span }).then(\n        () => {\n          activity.end()\n          bootstrapSpan.finish()\n          resolve({ graphqlRunner })\n        }\n      )\n    }\n  }, 100)\n\n  if (store.getState().jobs.active.length === 0) {\n    // onPostBootstrap\n    activity = report.activityTimer(`onPostBootstrap`, {\n      parentSpan: bootstrapSpan,\n    })\n    activity.start()\n    await apiRunnerNode(`onPostBootstrap`, { parentSpan: activity.span })\n    activity.end()\n\n    bootstrapSpan.finish()\n\n    report.log(``)\n    report.info(`bootstrap finished - ${process.uptime()} s`)\n    report.log(``)\n    emitter.emit(`BOOTSTRAP_FINISHED`)\n    return {\n      graphqlRunner,\n    }\n  } else {\n    return new Promise(resolve => {\n      // Wait until all side effect jobs are finished.\n      emitter.on(`END_JOB`, () => checkJobsDone(resolve))\n    })\n  }\n}\n"],"file":"index.js"}