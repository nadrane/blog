{"version":3,"sources":["../../src/bootstrap/page-hot-reloader.js"],"names":["_","require","emitter","store","apiRunnerNode","boundActionCreators","deletePage","deleteComponentsDependencies","pagesDirty","graphql","on","action","payload","internal","type","runCreatePages","plugins","getState","statefulPlugins","filter","p","gatsbyNode","resolve","createPagesStatefully","e","map","id","timestamp","Date","toJSON","traceId","waitForCascadingActions","Array","from","pages","values","forEach","page","includes","pluginCreatorId","updatedAt","path","emit","module","exports","graphqlRunner"],"mappings":";;;;;;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;iBAE2BA,OAAO,CAAE,UAAF,C;MAA1BC,O,YAAAA,O;MAASC,K,YAAAA,K;;AACjB,MAAMC,aAAa,GAAGH,OAAO,CAAE,0BAAF,CAA7B;;kBACgCA,OAAO,CAAE,kBAAF,C;MAA/BI,mB,aAAAA,mB;;MACAC,U,GAA6CD,mB,CAA7CC,U;MAAYC,4B,GAAiCF,mB,CAAjCE,4B;AAEpB,IAAIC,UAAU,GAAG,KAAjB;AACA,IAAIC,OAAJ;AAEAP,OAAO,CAACQ,EAAR,CAAY,aAAZ,EAA0BC,MAAM,IAAI;AAClC,MAAIA,MAAM,CAACC,OAAP,CAAeC,QAAf,CAAwBC,IAAxB,KAAkC,UAAtC,EAAiD;AAC/CN,IAAAA,UAAU,GAAG,IAAb;AACD;AACF,CAJD;AAKAN,OAAO,CAACQ,EAAR,CAAY,aAAZ,EAA0BC,MAAM,IAAI;AAClC,MAAIA,MAAM,CAACC,OAAP,CAAeC,QAAf,CAAwBC,IAAxB,KAAkC,UAAtC,EAAiD;AAC/CN,IAAAA,UAAU,GAAG,IAAb;AACD;AACF,CAJD;AAMAN,OAAO,CAACQ,EAAR,CAAY,yBAAZ,EAAsC,MAAM;AAC1C,MAAIF,UAAJ,EAAgB;AACdO,IAAAA,cAAc;AACf;AACF,CAJD;;AAMA,MAAMA,cAAc;AAAA;AAAA;AAAA,6CAAG,aAAY;AACjCP,IAAAA,UAAU,GAAG,KAAb;AACA,UAAMQ,OAAO,GAAGb,KAAK,CAACc,QAAN,GAAiBD,OAAjC,CAFiC,CAGjC;AACA;;AACA,UAAME,eAAe,GAAGF,OAAO,CAC5BG,MADqB,CACdC,CAAC,IAAI;AACX,UAAI;AACF,cAAMC,UAAU,GAAGpB,OAAO,CAAE,GAAEmB,CAAC,CAACE,OAAQ,cAAd,CAA1B;;AACA,YAAID,UAAU,CAACE,qBAAf,EAAsC;AACpC,iBAAO,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,KAAP;AACD;AACF,OAPD,CAOE,OAAOC,CAAP,EAAU;AACV,eAAO,KAAP;AACD;AACF,KAZqB,EAarBC,GAbqB,CAajBL,CAAC,IAAIA,CAAC,CAACM,EAbU,CAAxB;AAeA,UAAMC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAlB;AAEA,UAAMzB,aAAa,CAAE,aAAF,EAAgB;AACjCK,MAAAA,OADiC;AAEjCqB,MAAAA,OAAO,EAAG,aAFuB;AAGjCC,MAAAA,uBAAuB,EAAE;AAHQ,KAAhB,CAAnB,CAtBiC,CA4BjC;;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAW9B,KAAK,CAACc,QAAN,GAAiBiB,KAAjB,CAAuBC,MAAvB,EAAX,EAA4CC,OAA5C,CAAoDC,IAAI,IAAI;AAC1D,UACE,CAACrC,CAAC,CAACsC,QAAF,CAAWpB,eAAX,EAA4BmB,IAAI,CAACE,eAAjC,CAAD,IACAF,IAAI,CAACG,SAAL,GAAiBb,SAFnB,EAGE;AACApB,QAAAA,4BAA4B,CAAC,CAAC8B,IAAI,CAACI,IAAN,CAAD,CAA5B;AACAnC,QAAAA,UAAU,CAAC+B,IAAD,CAAV;AACD;AACF,KARD;AAUAnC,IAAAA,OAAO,CAACwC,IAAR,CAAc,iBAAd;AACD,GAxCmB;;AAAA,kBAAd3B,cAAc;AAAA;AAAA;AAAA,GAApB;;AA0CA4B,MAAM,CAACC,OAAP,GAAiBC,aAAa,IAAI;AAChCpC,EAAAA,OAAO,GAAGoC,aAAV;AACD,CAFD","sourcesContent":["const _ = require(`lodash`)\n\nconst { emitter, store } = require(`../redux`)\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst { boundActionCreators } = require(`../redux/actions`)\nconst { deletePage, deleteComponentsDependencies } = boundActionCreators\n\nlet pagesDirty = false\nlet graphql\n\nemitter.on(`CREATE_NODE`, action => {\n  if (action.payload.internal.type !== `SitePage`) {\n    pagesDirty = true\n  }\n})\nemitter.on(`DELETE_NODE`, action => {\n  if (action.payload.internal.type !== `SitePage`) {\n    pagesDirty = true\n  }\n})\n\nemitter.on(`API_RUNNING_QUEUE_EMPTY`, () => {\n  if (pagesDirty) {\n    runCreatePages()\n  }\n})\n\nconst runCreatePages = async () => {\n  pagesDirty = false\n  const plugins = store.getState().plugins\n  // Test which plugins implement createPagesStatefully so we can\n  // ignore their pages.\n  const statefulPlugins = plugins\n    .filter(p => {\n      try {\n        const gatsbyNode = require(`${p.resolve}/gatsby-node`)\n        if (gatsbyNode.createPagesStatefully) {\n          return true\n        } else {\n          return false\n        }\n      } catch (e) {\n        return false\n      }\n    })\n    .map(p => p.id)\n\n  const timestamp = new Date().toJSON()\n\n  await apiRunnerNode(`createPages`, {\n    graphql,\n    traceId: `createPages`,\n    waitForCascadingActions: true,\n  })\n\n  // Delete pages that weren't updated when running createPages.\n  Array.from(store.getState().pages.values()).forEach(page => {\n    if (\n      !_.includes(statefulPlugins, page.pluginCreatorId) &&\n      page.updatedAt < timestamp\n    ) {\n      deleteComponentsDependencies([page.path])\n      deletePage(page)\n    }\n  })\n\n  emitter.emit(`CREATE_PAGE_END`)\n}\n\nmodule.exports = graphqlRunner => {\n  graphql = graphqlRunner\n}\n"],"file":"page-hot-reloader.js"}