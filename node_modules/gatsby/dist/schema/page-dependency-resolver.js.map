{"version":3,"sources":["../../src/schema/page-dependency-resolver.js"],"names":["_","require","createPageDependency","pageDependencyResolver","resolver","node","args","context","info","path","result","asArray","isArray","nodeId","id","module","exports"],"mappings":";;;;;;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAE,sCAAF,CAApC;AAEA;;;;;;;;;;AAQA,SAASE,sBAAT,CAAgCC,QAAhC,EAA0C;AACxC;AAAA;AAAA;AAAA,iDAAO,WAAOC,IAAP,EAAaC,IAAb,EAAmBC,OAAO,GAAG,EAA7B,EAAiCC,IAAI,GAAG,EAAxC,EAA+C;AAAA,cAC5CC,IAD4C,GACnCF,OADmC,CAC5CE,IAD4C;AAEpD,cAAMC,MAAM,SAASN,QAAQ,CAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAsBC,IAAtB,CAA7B,CAFoD,CAIpD;;AACA,YAAIC,IAAJ,EAAU;AACR,gBAAME,OAAO,GAAGX,CAAC,CAACY,OAAF,CAAUF,MAAV,IAAoBA,MAApB,GAA6B,CAACA,MAAD,CAA7C;;AACA,+BAAmBC,OAAnB,kHAA4B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAAjBN,IAAiB;;AAC1B,gBAAIA,IAAJ,EAAU;AACR;AACAH,cAAAA,oBAAoB,CAAC;AACnBO,gBAAAA,IADmB;AAEnBI,gBAAAA,MAAM,EAAER,IAAI,CAACS;AAFM,eAAD,CAApB;AAID;AACF;AACF,SAhBmD,CAkBpD;;;AACA,eAAOJ,MAAP;AACD,OApBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBD;;AAEDK,MAAM,CAACC,OAAP,GAAiBb,sBAAjB","sourcesContent":["const _ = require(`lodash`)\nconst createPageDependency = require(`../redux/actions/add-page-dependency`)\n\n/**\n * A Graphql resolver middleware that runs `resolver` and creates a\n * page dependency with the returned node.\n *\n * @param resolver A graphql resolver. A function that take arguments\n * (node, args, context, info) and return a node\n * @returns A new graphql resolver\n */\nfunction pageDependencyResolver(resolver) {\n  return async (node, args, context = {}, info = {}) => {\n    const { path } = context\n    const result = await resolver(node, args, context, info)\n\n    // Call createPageDependency on each result\n    if (path) {\n      const asArray = _.isArray(result) ? result : [result]\n      for (const node of asArray) {\n        if (node) {\n          // using module.exports here so it can be mocked\n          createPageDependency({\n            path,\n            nodeId: node.id,\n          })\n        }\n      }\n    }\n\n    // Finally return the found node\n    return result\n  }\n}\n\nmodule.exports = pageDependencyResolver\n"],"file":"page-dependency-resolver.js"}