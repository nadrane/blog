{"version":3,"sources":["../../src/schema/create-sort-field.js"],"names":["require","GraphQLInputObjectType","GraphQLList","GraphQLEnumType","GraphQLNonNull","_","createKey","module","exports","createSortField","typeName","fieldNames","enumValues","forEach","field","value","SortByType","name","values","type","camelCase","fields","order","defaultValue","ASC","DESC"],"mappings":";;iBAMIA,OAAO,CAAE,SAAF,C;MAJTC,sB,YAAAA,sB;MACAC,W,YAAAA,W;MACAC,e,YAAAA,e;MACAC,c,YAAAA,c;;AAEF,MAAMC,CAAC,GAAGL,OAAO,CAAE,QAAF,CAAjB;;AACA,MAAMM,SAAS,GAAGN,OAAO,CAAE,cAAF,CAAzB,C,CAEA;;;AACAO,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CACfC,QADe,EAEfC,UAFe,EAGf;AACA,QAAMC,UAAU,GAAG,EAAnB;AACAD,EAAAA,UAAU,CAACE,OAAX,CAAmBC,KAAK,IAAI;AAC1BF,IAAAA,UAAU,CAACN,SAAS,CAACQ,KAAD,CAAV,CAAV,GAA+B;AAAEC,MAAAA,KAAK,EAAED;AAAT,KAA/B;AACD,GAFD;AAIA,QAAME,UAAU,GAAG,IAAIb,eAAJ,CAAoB;AACrCc,IAAAA,IAAI,EAAG,GAAEP,QAAS,kBADmB;AAErCQ,IAAAA,MAAM,EAAEN;AAF6B,GAApB,CAAnB;AAKA,SAAO;AACLO,IAAAA,IAAI,EAAE,IAAIlB,sBAAJ,CAA2B;AAC/BgB,MAAAA,IAAI,EAAEZ,CAAC,CAACe,SAAF,CAAa,GAAEV,QAAS,OAAxB,CADyB;AAE/BW,MAAAA,MAAM,EAAE;AACNA,QAAAA,MAAM,EAAE;AACNJ,UAAAA,IAAI,EAAEZ,CAAC,CAACe,SAAF,CAAa,GAAEV,QAAS,aAAxB,CADA;AAENS,UAAAA,IAAI,EAAE,IAAIf,cAAJ,CAAmB,IAAIF,WAAJ,CAAgBc,UAAhB,CAAnB;AAFA,SADF;AAKNM,QAAAA,KAAK,EAAE;AACLL,UAAAA,IAAI,EAAEZ,CAAC,CAACe,SAAF,CAAa,GAAEV,QAAS,YAAxB,CADD;AAELa,UAAAA,YAAY,EAAG,KAFV;AAGLJ,UAAAA,IAAI,EAAE,IAAIhB,eAAJ,CAAoB;AACxBc,YAAAA,IAAI,EAAEZ,CAAC,CAACe,SAAF,CAAa,GAAEV,QAAS,kBAAxB,CADkB;AAExBQ,YAAAA,MAAM,EAAE;AACNM,cAAAA,GAAG,EAAE;AAAET,gBAAAA,KAAK,EAAG;AAAV,eADC;AAENU,cAAAA,IAAI,EAAE;AAAEV,gBAAAA,KAAK,EAAG;AAAV;AAFA;AAFgB,WAApB;AAHD;AALD;AAFuB,KAA3B;AADD,GAAP;AAsBD,CApCD","sourcesContent":["// @flow\nconst {\n  GraphQLInputObjectType,\n  GraphQLList,\n  GraphQLEnumType,\n  GraphQLNonNull,\n} = require(`graphql`)\nconst _ = require(`lodash`)\nconst createKey = require(`./create-key`)\n\n// builds an input field for sorting, given an array of names to sort on\nmodule.exports = function createSortField(\n  typeName: string,\n  fieldNames: string[]\n) {\n  const enumValues = {}\n  fieldNames.forEach(field => {\n    enumValues[createKey(field)] = { value: field }\n  })\n\n  const SortByType = new GraphQLEnumType({\n    name: `${typeName}SortByFieldsEnum`,\n    values: enumValues,\n  })\n\n  return {\n    type: new GraphQLInputObjectType({\n      name: _.camelCase(`${typeName} sort`),\n      fields: {\n        fields: {\n          name: _.camelCase(`${typeName} sortFields`),\n          type: new GraphQLNonNull(new GraphQLList(SortByType)),\n        },\n        order: {\n          name: _.camelCase(`${typeName} sortOrder`),\n          defaultValue: `ASC`,\n          type: new GraphQLEnumType({\n            name: _.camelCase(`${typeName} sortOrderValues`),\n            values: {\n              ASC: { value: `asc` },\n              DESC: { value: `desc` },\n            },\n          }),\n        },\n      },\n    }),\n  }\n}\n"],"file":"create-sort-field.js"}