{"version":3,"sources":["../../src/schema/create-key.js"],"names":["invariant","require","nonAlphaNumericExpr","RegExp","module","exports","key","replaced","replace","match","char","index"],"mappings":";;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAE,WAAF,CAAzB;;AACA,MAAMC,mBAAmB,GAAG,IAAIC,MAAJ,CAAY,eAAZ,EAA6B,GAA7B,CAA5B;AAEA;;;;;;AAKAC,MAAM,CAACC,OAAP,GAAkBC,GAAD,IAAyB;AACxC;AACAN,EAAAA,SAAS,CACP,OAAOM,GAAP,KAAgB,QADT,EAEN,+CAA8CA,GAAI,EAF5C,CAAT;AAKA,QAAMC,QAAQ,GAAGD,GAAG,CAACE,OAAJ,CAAYN,mBAAZ,EAAkC,GAAlC,CAAjB,CAPwC,CASxC;;AACA,MAAIK,QAAQ,CAACE,KAAT,CAAe,KAAf,CAAJ,EAA2B;AACzB,WAAOF,QAAQ,CAACC,OAAT,CAAiB,IAAjB,EAAuB,CAACE,IAAD,EAAOC,KAAP,KAAkBA,KAAK,KAAK,CAAV,GAAe,GAAf,GAAqB,GAA9D,CAAP;AACD,GAZuC,CAcxC;;;AACA,MAAIJ,QAAQ,CAACE,KAAT,CAAe,QAAf,CAAJ,EAA8B;AAC5B,WAAQ,GAAD,GAAMF,QAAb;AACD;;AAED,SAAOA,QAAP;AACD,CApBD","sourcesContent":["// @flow\nconst invariant = require(`invariant`)\nconst nonAlphaNumericExpr = new RegExp(`[^a-zA-Z0-9_]`, `g`)\n\n/**\n * GraphQL field names must be a string and cannot contain anything other than\n * alphanumeric characters and `_`. They also can't start with `__` which is\n * reserved for internal fields (`___foo` doesn't work either).\n */\nmodule.exports = (key: string): string => {\n  // Check if the key is really a string otherwise GraphQL will throw.\n  invariant(\n    typeof key === `string`,\n    `Graphql field name (key) is not a string -> ${key}`\n  )\n\n  const replaced = key.replace(nonAlphaNumericExpr, `_`)\n\n  // key is invalid; normalize with leading underscore and rest with x\n  if (replaced.match(/^__/)) {\n    return replaced.replace(/_/g, (char, index) => (index === 0 ? `_` : `x`))\n  }\n\n  // key is invalid (starts with numeric); normalize with leading underscore\n  if (replaced.match(/^[0-9]/)) {\n    return `_` + replaced\n  }\n\n  return replaced\n}\n"],"file":"create-key.js"}