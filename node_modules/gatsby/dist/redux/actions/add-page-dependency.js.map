{"version":3,"sources":["../../../src/redux/actions/add-page-dependency.js"],"names":["_","require","store","actions","createPageDependency","path","nodeId","connection","state","getState","nodeDependencyExists","connectionDependencyExists","includes","componentDataDependencies","nodes","connections","action","dispatch","module","exports"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;iBAEkBA,OAAO,CAAE,KAAF,C;MAAjBC,K,YAAAA,K;;kBACYD,OAAO,CAAE,eAAF,C;MAAnBE,O,aAAAA,O;;AAER,SAASC,oBAAT,CAA8B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAA9B,EAA4D;AAC1D,QAAMC,KAAK,GAAGN,KAAK,CAACO,QAAN,EAAd,CAD0D,CAG1D;AACA;;AACA,MAAIC,oBAAoB,GAAG,KAA3B;AACA,MAAIC,0BAA0B,GAAG,KAAjC;;AACA,MAAI,CAACL,MAAL,EAAa;AACXI,IAAAA,oBAAoB,GAAG,IAAvB;AACD;;AACD,MACEJ,MAAM,IACNN,CAAC,CAACY,QAAF,CAAWJ,KAAK,CAACK,yBAAN,CAAgCC,KAAhC,CAAsCR,MAAtC,CAAX,EAA0DD,IAA1D,CAFF,EAGE;AACAK,IAAAA,oBAAoB,GAAG,IAAvB;AACD;;AACD,MAAI,CAACH,UAAL,EAAiB;AACfI,IAAAA,0BAA0B,GAAG,IAA7B;AACD;;AACD,MACEJ,UAAU,IACVP,CAAC,CAACY,QAAF,CAAWJ,KAAK,CAACK,yBAAN,CAAgCE,WAA3C,EAAwDR,UAAxD,CAFF,EAGE;AACAI,IAAAA,0BAA0B,GAAG,IAA7B;AACD;;AACD,MAAID,oBAAoB,IAAIC,0BAA5B,EAAwD;AACtD;AACD,GA3ByD,CA6B1D;;;AACA,QAAMK,MAAM,GAAGb,OAAO,CAACC,oBAAR,CAA6B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAA7B,CAAf;AACAL,EAAAA,KAAK,CAACe,QAAN,CAAeD,MAAf;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBf,oBAAjB","sourcesContent":["const _ = require(`lodash`)\n\nconst { store } = require(`../`)\nconst { actions } = require(`../actions.js`)\n\nfunction createPageDependency({ path, nodeId, connection }) {\n  const state = store.getState()\n\n  // Check that the dependencies aren't already recorded so we\n  // can avoid creating lots of very noisy actions.\n  let nodeDependencyExists = false\n  let connectionDependencyExists = false\n  if (!nodeId) {\n    nodeDependencyExists = true\n  }\n  if (\n    nodeId &&\n    _.includes(state.componentDataDependencies.nodes[nodeId], path)\n  ) {\n    nodeDependencyExists = true\n  }\n  if (!connection) {\n    connectionDependencyExists = true\n  }\n  if (\n    connection &&\n    _.includes(state.componentDataDependencies.connections, connection)\n  ) {\n    connectionDependencyExists = true\n  }\n  if (nodeDependencyExists && connectionDependencyExists) {\n    return\n  }\n\n  // It's new, let's dispatch it\n  const action = actions.createPageDependency({ path, nodeId, connection })\n  store.dispatch(action)\n}\n\nmodule.exports = createPageDependency\n"],"file":"add-page-dependency.js"}