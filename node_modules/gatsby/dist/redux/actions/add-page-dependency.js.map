{"version":3,"sources":["../../../src/redux/actions/add-page-dependency.js"],"names":["_","require","store","actions","exports","createPageDependency","path","nodeId","connection","state","getState","nodeDependencyExists","connectionDependencyExists","includes","componentDataDependencies","nodes","connections","action","dispatch"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;iBAEkBA,OAAO,CAAE,KAAF,C;MAAjBC,K,YAAAA,K;;kBACYD,OAAO,CAAE,eAAF,C;MAAnBE,O,aAAAA,O;;AAERC,OAAO,CAACC,oBAAR,GAA+B,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAD,KAAkC;AAC/D,QAAMC,KAAK,GAAGP,KAAK,CAACQ,QAAN,EAAd,CAD+D,CAG/D;AACA;;AACA,MAAIC,oBAAoB,GAAG,KAA3B;AACA,MAAIC,0BAA0B,GAAG,KAAjC;;AACA,MAAI,CAACL,MAAL,EAAa;AACXI,IAAAA,oBAAoB,GAAG,IAAvB;AACD;;AACD,MACEJ,MAAM,IACNP,CAAC,CAACa,QAAF,CAAWJ,KAAK,CAACK,yBAAN,CAAgCC,KAAhC,CAAsCR,MAAtC,CAAX,EAA0DD,IAA1D,CAFF,EAGE;AACAK,IAAAA,oBAAoB,GAAG,IAAvB;AACD;;AACD,MAAI,CAACH,UAAL,EAAiB;AACfI,IAAAA,0BAA0B,GAAG,IAA7B;AACD;;AACD,MACEJ,UAAU,IACVR,CAAC,CAACa,QAAF,CAAWJ,KAAK,CAACK,yBAAN,CAAgCE,WAA3C,EAAwDR,UAAxD,CAFF,EAGE;AACAI,IAAAA,0BAA0B,GAAG,IAA7B;AACD;;AACD,MAAID,oBAAoB,IAAIC,0BAA5B,EAAwD;AACtD;AACD,GA3B8D,CA6B/D;;;AACA,QAAMK,MAAM,GAAGd,OAAO,CAACE,oBAAR,CAA6B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAA7B,CAAf;AACAN,EAAAA,KAAK,CAACgB,QAAN,CAAeD,MAAf;AACD,CAhCD","sourcesContent":["const _ = require(`lodash`)\n\nconst { store } = require(`../`)\nconst { actions } = require(`../actions.js`)\n\nexports.createPageDependency = ({ path, nodeId, connection }) => {\n  const state = store.getState()\n\n  // Check that the dependencies aren't already recorded so we\n  // can avoid creating lots of very noisy actions.\n  let nodeDependencyExists = false\n  let connectionDependencyExists = false\n  if (!nodeId) {\n    nodeDependencyExists = true\n  }\n  if (\n    nodeId &&\n    _.includes(state.componentDataDependencies.nodes[nodeId], path)\n  ) {\n    nodeDependencyExists = true\n  }\n  if (!connection) {\n    connectionDependencyExists = true\n  }\n  if (\n    connection &&\n    _.includes(state.componentDataDependencies.connections, connection)\n  ) {\n    connectionDependencyExists = true\n  }\n  if (nodeDependencyExists && connectionDependencyExists) {\n    return\n  }\n\n  // It's new, let's dispatch it\n  const action = actions.createPageDependency({ path, nodeId, connection })\n  store.dispatch(action)\n}\n"],"file":"add-page-dependency.js"}