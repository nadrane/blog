{"version":3,"sources":["../../../src/redux/reducers/component-data-dependencies.js"],"names":["_","require","module","exports","state","nodes","connections","action","type","payload","path","nodeId","existingPaths","newPaths","uniq","concat","id","connection","mapValues","paths","difference"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,KAAK,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,cAAN;AACE,aAAO;AAAEH,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,WAAW,EAAE;AAA1B,OAAP;;AACF,SAAM,6BAAN;AACE,UAAIC,MAAM,CAACE,OAAP,CAAeC,IAAf,KAAyB,EAA7B,EAAgC;AAC9B,eAAON,KAAP;AACD,OAHH,CAKE;;;AACA,UAAIG,MAAM,CAACE,OAAP,CAAeE,MAAnB,EAA2B;AACzB,YAAIC,aAAa,GAAG,EAApB;;AACA,YAAIR,KAAK,CAACC,KAAN,CAAYE,MAAM,CAACE,OAAP,CAAeE,MAA3B,CAAJ,EAAwC;AACtCC,UAAAA,aAAa,GAAGR,KAAK,CAACC,KAAN,CAAYE,MAAM,CAACE,OAAP,CAAeE,MAA3B,CAAhB;AACD;;AACD,cAAME,QAAQ,GAAGb,CAAC,CAACc,IAAF,CACfF,aAAa,CAACG,MAAd,CAAqBR,MAAM,CAACE,OAAP,CAAeC,IAAf,IAAuBH,MAAM,CAACE,OAAP,CAAeO,EAA3D,CADe,CAAjB;;AAGAZ,QAAAA,KAAK,CAACC,KAAN,CAAYE,MAAM,CAACE,OAAP,CAAeE,MAA3B,IAAqCE,QAArC;AACD,OAfH,CAiBE;;;AACA,UAAIN,MAAM,CAACE,OAAP,CAAeQ,UAAnB,EAA+B;AAC7B,YAAIL,aAAa,GAAG,EAApB;;AACA,YAAIR,KAAK,CAACE,WAAN,CAAkBC,MAAM,CAACE,OAAP,CAAeQ,UAAjC,CAAJ,EAAkD;AAChDL,UAAAA,aAAa,GAAGR,KAAK,CAACE,WAAN,CAAkBC,MAAM,CAACE,OAAP,CAAeQ,UAAjC,CAAhB;AACD;;AACD,cAAMJ,QAAQ,GAAGb,CAAC,CAACc,IAAF,CACfF,aAAa,CAACG,MAAd,CAAqBR,MAAM,CAACE,OAAP,CAAeC,IAAf,IAAuBH,MAAM,CAACE,OAAP,CAAeO,EAA3D,CADe,CAAjB;;AAGAZ,QAAAA,KAAK,CAACE,WAAN,CAAkBC,MAAM,CAACE,OAAP,CAAeQ,UAAjC,IAA+CJ,QAA/C;AACD;;AAED,aAAOT,KAAP;;AACF,SAAM,gCAAN;AACEA,MAAAA,KAAK,CAACC,KAAN,GAAcL,CAAC,CAACkB,SAAF,CAAYd,KAAK,CAACC,KAAlB,EAAyBc,KAAK,IAC1CnB,CAAC,CAACoB,UAAF,CAAaD,KAAb,EAAoBZ,MAAM,CAACE,OAAP,CAAeU,KAAnC,CADY,CAAd;AAGAf,MAAAA,KAAK,CAACE,WAAN,GAAoBN,CAAC,CAACkB,SAAF,CAAYd,KAAK,CAACE,WAAlB,EAA+Ba,KAAK,IACtDnB,CAAC,CAACoB,UAAF,CAAaD,KAAb,EAAoBZ,MAAM,CAACE,OAAP,CAAeU,KAAnC,CADkB,CAApB;AAIA,aAAOf,KAAP;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOA,KAAP;AAtDJ;AAwDD,CAzDD","sourcesContent":["const _ = require(`lodash`)\n\nmodule.exports = (state = { nodes: {}, connections: {} }, action) => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return { nodes: {}, connections: {} }\n    case `CREATE_COMPONENT_DEPENDENCY`:\n      if (action.payload.path === ``) {\n        return state\n      }\n\n      // If this nodeId not set yet.\n      if (action.payload.nodeId) {\n        let existingPaths = []\n        if (state.nodes[action.payload.nodeId]) {\n          existingPaths = state.nodes[action.payload.nodeId]\n        }\n        const newPaths = _.uniq(\n          existingPaths.concat(action.payload.path || action.payload.id)\n        )\n        state.nodes[action.payload.nodeId] = newPaths\n      }\n\n      // If this connection not set yet.\n      if (action.payload.connection) {\n        let existingPaths = []\n        if (state.connections[action.payload.connection]) {\n          existingPaths = state.connections[action.payload.connection]\n        }\n        const newPaths = _.uniq(\n          existingPaths.concat(action.payload.path || action.payload.id)\n        )\n        state.connections[action.payload.connection] = newPaths\n      }\n\n      return state\n    case `DELETE_COMPONENTS_DEPENDENCIES`:\n      state.nodes = _.mapValues(state.nodes, paths =>\n        _.difference(paths, action.payload.paths)\n      )\n      state.connections = _.mapValues(state.connections, paths =>\n        _.difference(paths, action.payload.paths)\n      )\n\n      return state\n    // Don't delete data dependencies as we're now deleting transformed nodes\n    // when their parent is changed. WIth the code below as stands, this\n    // would delete the connection between the page and the transformed\n    // node which will be recreated after its deleted meaning the query\n    // won't be re-run.\n    // case `DELETE_NODE`:\n    // delete state.nodes[action.payload]\n    // return state\n    // case `DELETE_NODES`:\n    // action.payload.forEach(n => delete state.nodes[n])\n    // return state\n    default:\n      return state\n  }\n}\n"],"file":"component-data-dependencies.js"}