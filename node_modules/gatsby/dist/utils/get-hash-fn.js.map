{"version":3,"sources":["../../src/utils/get-hash-fn.js"],"names":["createHash","require","getHashFn","hashFunction","hashDigest","hashDigestBits","cache","Set","input","hash","update","digest","partialDigest","substr","output","parseInt","has","Error","add","module","exports"],"mappings":";;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAE,QAAF,CAAP,CAAkBD,UAArC;;AAEA,MAAME,SAAS,GAAG,CAAC;AACjBC,EAAAA,YAAY,GAAI,KADC;AAEjBC,EAAAA,UAAU,GAAI,KAFG;AAGjBC,EAAAA,cAAc,GAAG,EAHA;AAIjBC,EAAAA,KAAK,GAAG,IAAIC,GAAJ;AAJS,CAAD,KAKZC,KAAK,IAAI;AACb,QAAMC,IAAI,GAAGT,UAAU,CAACG,YAAD,CAAvB;AACAM,EAAAA,IAAI,CAACC,MAAL,CAAYF,KAAZ;AACA,QAAMG,MAAM,GAAGF,IAAI,CAACE,MAAL,CAAYP,UAAZ,CAAf;AACA,QAAMQ,aAAa,GAAGD,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiBR,cAAc,GAAG,CAAlC,CAAtB;AACA,QAAMS,MAAM,GAAGC,QAAQ,CAACH,aAAD,EAAgB,EAAhB,CAAvB,CALa,CAMb;;AACA,MAAIN,KAAK,CAACU,GAAN,CAAUF,MAAV,CAAJ,EAAuB;AACrB,UAAMG,KAAK,CAAE,uBAAsBT,KAAM,OAAMM,MAAO,EAA3C,CAAX;AACD;;AACDR,EAAAA,KAAK,CAACY,GAAN,CAAUJ,MAAV;AACA,SAAOA,MAAP;AACD,CAjBD;;AAmBAK,MAAM,CAACC,OAAP,GAAiBlB,SAAjB","sourcesContent":["const createHash = require(`crypto`).createHash\n\nconst getHashFn = ({\n  hashFunction = `md5`,\n  hashDigest = `hex`,\n  hashDigestBits = 48,\n  cache = new Set(),\n}) => input => {\n  const hash = createHash(hashFunction)\n  hash.update(input)\n  const digest = hash.digest(hashDigest)\n  const partialDigest = digest.substr(0, hashDigestBits / 4)\n  const output = parseInt(partialDigest, 16)\n  // guard against collisions\n  if (cache.has(output)) {\n    throw Error(`Hash collision at f(${input}) = ${output}`)\n  }\n  cache.add(output)\n  return output\n}\n\nmodule.exports = getHashFn\n"],"file":"get-hash-fn.js"}