{"version":3,"sources":["../../src/commands/build-html.js"],"names":["webpack","require","fs","debug","webpackConfig","store","createErrorFromString","renderHTMLQueue","module","exports","program","activity","directory","pages","Array","from","getState","values","page","path","compilerConfig","Promise","resolve","reject","run","e","stats","outputFile","hasErrors","webpackErrors","toJson","errors","filter","Boolean","length","Error","toString","then","unlinkSync","catch","stack"],"mappings":";;;;;;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAE,SAAF,CAAvB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAE,IAAF,CAAlB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAE,OAAF,CAAP,CAAkB,aAAlB,CAAd;;AAEA,MAAMG,aAAa,GAAGH,OAAO,CAAE,yBAAF,CAA7B;;iBACkBA,OAAO,CAAE,UAAF,C;MAAjBI,K,YAAAA,K;;kBAC0BJ,OAAO,CAAE,gCAAF,C;MAAjCK,qB,aAAAA,qB;;AACR,MAAMC,eAAe,GAAGN,OAAO,CAAE,8BAAF,CAA/B;;AAEAO,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA,6CAAiB,WAAOC,OAAP,EAAqBC,QAArB,EAAuC;AAAA,UAC9CC,SAD8C,GAChCF,OADgC,CAC9CE,SAD8C;AAGtDT,IAAAA,KAAK,CAAE,wBAAF,CAAL,CAHsD,CAItD;;AACA,UAAMU,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWV,KAAK,CAACW,QAAN,GAAiBH,KAAjB,CAAuBI,MAAvB,EAAX,EAA4CC,IAAI,IAAIA,IAAI,CAACC,IAAzD,CAAd,CALsD,CAOtD;;AACA,UAAMC,cAAc,SAAShB,aAAa,CACxCM,OADwC,EAExCE,SAFwC,EAGvC,YAHuC,EAIxC,IAJwC,CAA1C;AAOA,WAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCvB,MAAAA,OAAO,CAACoB,cAAD,CAAP,CAAwBI,GAAxB,CAA4B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACxC,YAAID,CAAJ,EAAO;AACL,iBAAOF,MAAM,CAACE,CAAD,CAAb;AACD;;AACD,cAAME,UAAU,GAAI,GAAEf,SAAU,wBAAhC;;AACA,YAAIc,KAAK,CAACE,SAAN,EAAJ,EAAuB;AACrB,cAAIC,aAAa,GAAGH,KAAK,CAACI,MAAN,GAAeC,MAAf,CAAsBC,MAAtB,CAA6BC,OAA7B,CAApB;AACA,iBAAOV,MAAM,CACXM,aAAa,CAACK,MAAd,GACI5B,qBAAqB,CAACuB,aAAa,CAAC,CAAD,CAAd,EAAoB,GAAEF,UAAW,MAAjC,CADzB,GAEI,IAAIQ,KAAJ,CACG,8CAAD,GACG,OAAMT,KAAK,CAACU,QAAN,EAAiB,EAF5B,CAHO,CAAb;AAQD;;AAED,eAAO7B,eAAe,CAACoB,UAAD,EAAad,KAAb,EAAoBF,QAApB,CAAf,CACJ0B,IADI,CACC,MAAM;AACV;AACA,cAAI;AACFnC,YAAAA,EAAE,CAACoC,UAAH,CAAcX,UAAd;AACAzB,YAAAA,EAAE,CAACoC,UAAH,CAAe,GAAEX,UAAW,MAA5B;AACD,WAHD,CAGE,OAAOF,CAAP,EAAU,CACV;AACD;;AACD,iBAAOH,OAAO,CAAC,IAAD,EAAOI,KAAP,CAAd;AACD,SAVI,EAWJa,KAXI,CAWEd,CAAC,IAAI;AACVF,UAAAA,MAAM,CAACjB,qBAAqB,CAACmB,CAAC,CAACe,KAAH,EAAW,GAAEb,UAAW,MAAxB,CAAtB,CAAN;AACD,SAbI,CAAP;AAcD,OA/BD;AAgCD,KAjCM,CAAP;AAkCD,GAjDD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* @flow */\nconst webpack = require(`webpack`)\nconst fs = require(`fs`)\nconst debug = require(`debug`)(`gatsby:html`)\n\nconst webpackConfig = require(`../utils/webpack.config`)\nconst { store } = require(`../redux`)\nconst { createErrorFromString } = require(`gatsby-cli/lib/reporter/errors`)\nconst renderHTMLQueue = require(`../utils/html-renderer-queue`)\n\nmodule.exports = async (program: any, activity: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n  // Reduce pages objects to an array of paths.\n  const pages = Array.from(store.getState().pages.values(), page => page.path)\n\n  // Static site generation.\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `build-html`,\n    null\n  )\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig).run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      const outputFile = `${directory}/public/render-page.js`\n      if (stats.hasErrors()) {\n        let webpackErrors = stats.toJson().errors.filter(Boolean)\n        return reject(\n          webpackErrors.length\n            ? createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n            : new Error(\n                `There was an issue while building the site: ` +\n                  `\\n\\n${stats.toString()}`\n              )\n        )\n      }\n\n      return renderHTMLQueue(outputFile, pages, activity)\n        .then(() => {\n          // Remove the temp JS bundle file built for the static-site-generator-plugin\n          try {\n            fs.unlinkSync(outputFile)\n            fs.unlinkSync(`${outputFile}.map`)\n          } catch (e) {\n            // This function will fail on Windows with no further consequences.\n          }\n          return resolve(null, stats)\n        })\n        .catch(e => {\n          reject(createErrorFromString(e.stack, `${outputFile}.map`))\n        })\n    })\n  })\n}\n"],"file":"build-html.js"}