{"version":3,"sources":["../../src/commands/repl.js"],"names":["repl","require","graphql","bootstrap","loadNodeContent","getNodes","getNode","getNodesByType","store","module","exports","program","getState","schema","config","babelrc","jsonDataPaths","pages","components","staticQueryComponents","nodes","query","result","console","log","JSON","stringify","_","start","prompt","context","dataPaths","entries","siteConfig","staticQueries","on","process","exit"],"mappings":";;;;;;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAE,MAAF,CAApB;;iBACoBA,OAAO,CAAE,SAAF,C;MAAnBC,O,YAAAA,O;;AACR,MAAMC,SAAS,GAAGF,OAAO,CAAE,cAAF,CAAzB;;kBAMIA,OAAO,CAAE,aAAF,C;MAJTG,e,aAAAA,e;MACAC,Q,aAAAA,Q;MACAC,O,aAAAA,O;MACAC,c,aAAAA,c;;kBAEgBN,OAAO,CAAE,UAAF,C;MAAjBO,K,aAAAA,K;;AAERC,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA,6CAAiB,WAAMC,OAAN,EAAiB;AAChC;AACA,UAAMR,SAAS,CAACQ,OAAD,CAAf,CAFgC,CAIhC;;AAJgC,4BAa5BH,KAAK,CAACI,QAAN,EAb4B;AAAA,UAM9BC,MAN8B,mBAM9BA,MAN8B;AAAA,UAO9BC,MAP8B,mBAO9BA,MAP8B;AAAA,UAQ9BC,OAR8B,mBAQ9BA,OAR8B;AAAA,UAS9BC,aAT8B,mBAS9BA,aAT8B;AAAA,UAU9BC,KAV8B,mBAU9BA,KAV8B;AAAA,UAW9BC,UAX8B,mBAW9BA,UAX8B;AAAA,UAY9BC,qBAZ8B,mBAY9BA,qBAZ8B;;AAehC,UAAMC,KAAK,GAAGf,QAAQ,EAAtB;;AAEA,UAAMgB,KAAK;AAAA;AAAA;AAAA,kDAAG,WAAMA,MAAN,EAAe;AAC3B,cAAMC,MAAM,SAASpB,OAAO,CAACW,MAAD,EAASQ,MAAT,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,CAA5B;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAuB,EAApD;AACD,OAHU;;AAAA;AAAA;AAAA;AAAA,OAAX,CAjBgC,CAsBhC;;;AACA,UAAMK,CAAC,GAAG3B,IAAI,CAAC4B,KAAL,CAAW;AACnBC,MAAAA,MAAM,EAAG;AADU,KAAX,CAAV,CAvBgC,CA2BhC;;;AACAF,IAAAA,CAAC,CAACG,OAAF,CAAUf,OAAV,GAAoBA,OAApB;AACAY,IAAAA,CAAC,CAACG,OAAF,CAAUZ,UAAV,GAAuBA,UAAvB;AACAS,IAAAA,CAAC,CAACG,OAAF,CAAUC,SAAV,GAAsBf,aAAtB;AACAW,IAAAA,CAAC,CAACG,OAAF,CAAUxB,OAAV,GAAoBA,OAApB;AACAqB,IAAAA,CAAC,CAACG,OAAF,CAAUzB,QAAV,GAAqBA,QAArB;AACAsB,IAAAA,CAAC,CAACG,OAAF,CAAUvB,cAAV,GAA2BA,cAA3B;AACAoB,IAAAA,CAAC,CAACG,OAAF,CAAU1B,eAAV,GAA4BA,eAA5B;AACAuB,IAAAA,CAAC,CAACG,OAAF,CAAUV,KAAV,GAAkB,CAAC,GAAGA,KAAK,CAACY,OAAN,EAAJ,CAAlB;AACAL,IAAAA,CAAC,CAACG,OAAF,CAAUb,KAAV,GAAkB,CAAC,GAAGA,KAAK,CAACe,OAAN,EAAJ,CAAlB;AACAL,IAAAA,CAAC,CAACG,OAAF,CAAU5B,OAAV,GAAoBmB,KAApB;AACAM,IAAAA,CAAC,CAACG,OAAF,CAAUjB,MAAV,GAAmBA,MAAnB;AACAc,IAAAA,CAAC,CAACG,OAAF,CAAUG,UAAV,GAAuBnB,MAAvB;AACAa,IAAAA,CAAC,CAACG,OAAF,CAAUI,aAAV,GAA0Bf,qBAA1B;;AAEAQ,IAAAA,CAAC,CAACQ,EAAF,CAAM,MAAN,EAAa,MAAMC,OAAO,CAACC,IAAR,CAAa,CAAb,CAAnB;AACD,GA3CD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const repl = require(`repl`)\nconst { graphql } = require(`graphql`)\nconst bootstrap = require(`../bootstrap`)\nconst {\n  loadNodeContent,\n  getNodes,\n  getNode,\n  getNodesByType,\n} = require(`../db/nodes`)\nconst { store } = require(`../redux`)\n\nmodule.exports = async program => {\n  // run bootstrap\n  await bootstrap(program)\n\n  // get all the goodies from the store\n  const {\n    schema,\n    config,\n    babelrc,\n    jsonDataPaths,\n    pages,\n    components,\n    staticQueryComponents,\n  } = store.getState()\n\n  const nodes = getNodes()\n\n  const query = async query => {\n    const result = await graphql(schema, query, {}, {}, {})\n    console.log(`query result: ${JSON.stringify(result)}`)\n  }\n\n  // init new repl\n  const _ = repl.start({\n    prompt: `gatsby > `,\n  })\n\n  // set some globals to make life easier\n  _.context.babelrc = babelrc\n  _.context.components = components\n  _.context.dataPaths = jsonDataPaths\n  _.context.getNode = getNode\n  _.context.getNodes = getNodes\n  _.context.getNodesByType = getNodesByType\n  _.context.loadNodeContent = loadNodeContent\n  _.context.nodes = [...nodes.entries()]\n  _.context.pages = [...pages.entries()]\n  _.context.graphql = query\n  _.context.schema = schema\n  _.context.siteConfig = config\n  _.context.staticQueries = staticQueryComponents\n\n  _.on(`exit`, () => process.exit(0))\n}\n"],"file":"repl.js"}