{"version":3,"sources":["../../src/commands/develop-html.js"],"names":["fs","require","webpack","createErrorFromString","debug","webpackConfig","renderHTMLQueue","module","exports","program","directory","compilerConfig","Promise","resolve","reject","run","e","stats","outputFile","hasErrors","webpackErrors","toJson","errors","console","log","then","unlinkSync"],"mappings":";;;;;;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAE,IAAF,CAAlB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAE,SAAF,CAAvB;;iBACkCA,OAAO,CAAE,gCAAF,C;MAAjCE,qB,YAAAA,qB;;AACR,MAAMC,KAAK,GAAGH,OAAO,CAAE,OAAF,CAAP,CAAkB,aAAlB,CAAd;;AACA,MAAMI,aAAa,GAAGJ,OAAO,CAAE,yBAAF,CAA7B;;AACA,MAAMK,eAAe,GAAGL,OAAO,CAAE,8BAAF,CAA/B;;AAEAM,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA,6CAAiB,WAAOC,OAAP,EAAwB;AAAA,UAC/BC,SAD+B,GACjBD,OADiB,CAC/BC,SAD+B;AAGvCN,IAAAA,KAAK,CAAE,wBAAF,CAAL,CAHuC,CAKvC;;AACA,UAAMO,cAAc,SAASN,aAAa,CACxCI,OADwC,EAExCC,SAFwC,EAGvC,cAHuC,EAIxC,IAJwC,CAA1C;AAOA,WAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCZ,MAAAA,OAAO,CAACS,cAAD,CAAP,CAAwBI,GAAxB,CAA4B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACxC,YAAID,CAAJ,EAAO;AACL,iBAAOF,MAAM,CAACE,CAAD,CAAb;AACD;;AACD,cAAME,UAAU,GAAI,GAAER,SAAU,wBAAhC;;AACA,YAAIO,KAAK,CAACE,SAAN,EAAJ,EAAuB;AACrB,cAAIC,aAAa,GAAGH,KAAK,CAACI,MAAN,GAAeC,MAAnC;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAa,MAAb,EAAoBJ,aAAa,CAAC,CAAD,CAAjC;AACA,iBAAON,MAAM,CACXX,qBAAqB,CAACiB,aAAa,CAAC,CAAD,CAAd,EAAoB,GAAEF,UAAW,MAAjC,CADV,CAAb;AAGD;;AAED,eAAOZ,eAAe,CAACY,UAAD,EAAa,CAAE,GAAF,CAAb,CAAf,CAAmCO,IAAnC,CAAwC,MAAM;AACnD;AACA,cAAI;AACFzB,YAAAA,EAAE,CAAC0B,UAAH,CAAcR,UAAd;AACD,WAFD,CAEE,OAAOF,CAAP,EAAU,CACV;AACD;;AAED,iBAAOH,OAAO,CAAC,IAAD,EAAOI,KAAP,CAAd;AACD,SATM,CAAP;AAUD,OAvBD;AAwBD,KAzBM,CAAP;AA0BD,GAvCD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* @flow */\nconst fs = require(`fs`)\nconst webpack = require(`webpack`)\nconst { createErrorFromString } = require(`gatsby-cli/lib/reporter/errors`)\nconst debug = require(`debug`)(`gatsby:html`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst renderHTMLQueue = require(`../utils/html-renderer-queue`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n\n  // Static site generation.\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `develop-html`,\n    null\n  )\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig).run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      const outputFile = `${directory}/public/render-page.js`\n      if (stats.hasErrors()) {\n        let webpackErrors = stats.toJson().errors\n        console.log(`here`, webpackErrors[0])\n        return reject(\n          createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n        )\n      }\n\n      return renderHTMLQueue(outputFile, [`/`]).then(() => {\n        // Remove the temp JS bundle file built for the static-site-generator-plugin\n        try {\n          fs.unlinkSync(outputFile)\n        } catch (e) {\n          // This function will fail on Windows with no further consequences.\n        }\n\n        return resolve(null, stats)\n      })\n    })\n  })\n}\n"],"file":"develop-html.js"}