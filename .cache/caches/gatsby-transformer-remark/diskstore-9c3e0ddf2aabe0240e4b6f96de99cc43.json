{"expireTime":9007200794918866000,"key":"transformer-remark-markdown-html-ast-4d8ef3c5b93a7572fd45c66ca509d7cc--","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I stumbled upon an ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":20,"offset":20}}},{"type":"element","tagName":"a","properties":{"href":"https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html"},"children":[{"type":"text","value":"article","position":{"start":{"line":2,"column":21,"offset":21},"end":{"line":2,"column":28,"offset":28}}}],"position":{"start":{"line":2,"column":20,"offset":20},"end":{"line":2,"column":103,"offset":103}}},{"type":"text","value":" the other day where Rob Pike implements a rudimentary regular expression engine in c. I converted his code to Javascript and added test specs so that someone can self-guide themselves through the creation of the regex engine. The specs and solution can be found in this ","position":{"start":{"line":2,"column":103,"offset":103},"end":{"line":2,"column":374,"offset":374}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/nadrane/build-your-own-regex"},"children":[{"type":"text","value":"GitHub repository","position":{"start":{"line":2,"column":375,"offset":375},"end":{"line":2,"column":392,"offset":392}}}],"position":{"start":{"line":2,"column":374,"offset":374},"end":{"line":2,"column":442,"offset":442}}},{"type":"text","value":". This blog post walks through my solution.","position":{"start":{"line":2,"column":442,"offset":442},"end":{"line":2,"column":485,"offset":485}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":485,"offset":485}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- more -->","position":{"start":{"line":4,"column":1,"offset":487},"end":{"line":4,"column":14,"offset":500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"The Problem","position":{"start":{"line":6,"column":4,"offset":505},"end":{"line":6,"column":15,"offset":516}}}],"position":{"start":{"line":6,"column":1,"offset":502},"end":{"line":6,"column":15,"offset":516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Our regex engine will support the following syntax:","position":{"start":{"line":8,"column":1,"offset":518},"end":{"line":8,"column":52,"offset":569}}}],"position":{"start":{"line":8,"column":1,"offset":518},"end":{"line":8,"column":52,"offset":569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Syntax","position":{"start":{"line":10,"column":3,"offset":573},"end":{"line":10,"column":9,"offset":579}}}],"position":{"start":{"line":10,"column":3,"offset":573},"end":{"line":10,"column":9,"offset":579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Meaning","position":{"start":{"line":10,"column":12,"offset":582},"end":{"line":10,"column":19,"offset":589}}}],"position":{"start":{"line":10,"column":12,"offset":582},"end":{"line":10,"column":55,"offset":625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Example","position":{"start":{"line":10,"column":58,"offset":628},"end":{"line":10,"column":65,"offset":635}}}],"position":{"start":{"line":10,"column":58,"offset":628},"end":{"line":10,"column":65,"offset":635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"matches","position":{"start":{"line":10,"column":68,"offset":638},"end":{"line":10,"column":75,"offset":645}}}],"position":{"start":{"line":10,"column":68,"offset":638},"end":{"line":10,"column":88,"offset":658}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":571},"end":{"line":10,"column":90,"offset":660}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":571},"end":{"line":10,"column":90,"offset":660}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"a","position":{"start":{"line":12,"column":3,"offset":753},"end":{"line":12,"column":4,"offset":754}}}],"position":{"start":{"line":12,"column":3,"offset":753},"end":{"line":12,"column":9,"offset":759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Matches the specified character literal","position":{"start":{"line":12,"column":12,"offset":762},"end":{"line":12,"column":51,"offset":801}}}],"position":{"start":{"line":12,"column":12,"offset":762},"end":{"line":12,"column":55,"offset":805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"q","position":{"start":{"line":12,"column":58,"offset":808},"end":{"line":12,"column":59,"offset":809}}}],"position":{"start":{"line":12,"column":58,"offset":808},"end":{"line":12,"column":65,"offset":815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"q","position":{"start":{"line":12,"column":68,"offset":818},"end":{"line":12,"column":69,"offset":819}}}],"position":{"start":{"line":12,"column":68,"offset":818},"end":{"line":12,"column":88,"offset":838}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":751},"end":{"line":12,"column":90,"offset":840}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"*","position":{"start":{"line":13,"column":3,"offset":843},"end":{"line":13,"column":5,"offset":845}}}],"position":{"start":{"line":13,"column":3,"offset":843},"end":{"line":13,"column":9,"offset":849}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Matches 0 or more of the previous character","position":{"start":{"line":13,"column":12,"offset":852},"end":{"line":13,"column":55,"offset":895}}}],"position":{"start":{"line":13,"column":12,"offset":852},"end":{"line":13,"column":55,"offset":895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"a","position":{"start":{"line":13,"column":58,"offset":898},"end":{"line":13,"column":59,"offset":899}}},{"type":"text","value":"*","position":{"start":{"line":13,"column":59,"offset":899},"end":{"line":13,"column":61,"offset":901}}}],"position":{"start":{"line":13,"column":58,"offset":898},"end":{"line":13,"column":65,"offset":905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"\"\", a, aa, aaa","position":{"start":{"line":13,"column":68,"offset":908},"end":{"line":13,"column":82,"offset":922}}}],"position":{"start":{"line":13,"column":68,"offset":908},"end":{"line":13,"column":88,"offset":928}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":1,"offset":841},"end":{"line":13,"column":90,"offset":930}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"?","position":{"start":{"line":14,"column":3,"offset":933},"end":{"line":14,"column":4,"offset":934}}}],"position":{"start":{"line":14,"column":3,"offset":933},"end":{"line":14,"column":9,"offset":939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Matches 0 or 1 of the previous character","position":{"start":{"line":14,"column":12,"offset":942},"end":{"line":14,"column":52,"offset":982}}}],"position":{"start":{"line":14,"column":12,"offset":942},"end":{"line":14,"column":55,"offset":985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"a?","position":{"start":{"line":14,"column":58,"offset":988},"end":{"line":14,"column":60,"offset":990}}}],"position":{"start":{"line":14,"column":58,"offset":988},"end":{"line":14,"column":65,"offset":995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"\"\", a","position":{"start":{"line":14,"column":68,"offset":998},"end":{"line":14,"column":73,"offset":1003}}}],"position":{"start":{"line":14,"column":68,"offset":998},"end":{"line":14,"column":88,"offset":1018}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":1,"offset":931},"end":{"line":14,"column":90,"offset":1020}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":".","position":{"start":{"line":15,"column":3,"offset":1023},"end":{"line":15,"column":4,"offset":1024}}}],"position":{"start":{"line":15,"column":3,"offset":1023},"end":{"line":15,"column":9,"offset":1029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Matches any character literal","position":{"start":{"line":15,"column":12,"offset":1032},"end":{"line":15,"column":41,"offset":1061}}}],"position":{"start":{"line":15,"column":12,"offset":1032},"end":{"line":15,"column":55,"offset":1075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":".","position":{"start":{"line":15,"column":58,"offset":1078},"end":{"line":15,"column":59,"offset":1079}}}],"position":{"start":{"line":15,"column":58,"offset":1078},"end":{"line":15,"column":65,"offset":1085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"a, b, c, d, e ...","position":{"start":{"line":15,"column":68,"offset":1088},"end":{"line":15,"column":85,"offset":1105}}}],"position":{"start":{"line":15,"column":68,"offset":1088},"end":{"line":15,"column":88,"offset":1108}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":1,"offset":1021},"end":{"line":15,"column":90,"offset":1110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"^","position":{"start":{"line":16,"column":3,"offset":1113},"end":{"line":16,"column":4,"offset":1114}}}],"position":{"start":{"line":16,"column":3,"offset":1113},"end":{"line":16,"column":9,"offset":1119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Matches the start of a string","position":{"start":{"line":16,"column":12,"offset":1122},"end":{"line":16,"column":41,"offset":1151}}}],"position":{"start":{"line":16,"column":12,"offset":1122},"end":{"line":16,"column":55,"offset":1165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"^c","position":{"start":{"line":16,"column":58,"offset":1168},"end":{"line":16,"column":60,"offset":1170}}}],"position":{"start":{"line":16,"column":58,"offset":1168},"end":{"line":16,"column":65,"offset":1175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"c, ca, caa, cbb ...","position":{"start":{"line":16,"column":68,"offset":1178},"end":{"line":16,"column":87,"offset":1197}}}],"position":{"start":{"line":16,"column":68,"offset":1178},"end":{"line":16,"column":88,"offset":1198}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":1111},"end":{"line":16,"column":90,"offset":1200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"$","position":{"start":{"line":17,"column":3,"offset":1203},"end":{"line":17,"column":4,"offset":1204}}}],"position":{"start":{"line":17,"column":3,"offset":1203},"end":{"line":17,"column":9,"offset":1209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Matches the end of a string","position":{"start":{"line":17,"column":12,"offset":1212},"end":{"line":17,"column":39,"offset":1239}}}],"position":{"start":{"line":17,"column":12,"offset":1212},"end":{"line":17,"column":55,"offset":1255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"a$","position":{"start":{"line":17,"column":58,"offset":1258},"end":{"line":17,"column":60,"offset":1260}}}],"position":{"start":{"line":17,"column":58,"offset":1258},"end":{"line":17,"column":65,"offset":1265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"ba, baaa, qwerta ...","position":{"start":{"line":17,"column":68,"offset":1268},"end":{"line":17,"column":88,"offset":1288}}}],"position":{"start":{"line":17,"column":68,"offset":1268},"end":{"line":17,"column":88,"offset":1288}}},{"type":"text","value":"\n"}],"position":{"start":{"line":17,"column":1,"offset":1201},"end":{"line":17,"column":90,"offset":1290}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":751},"end":{"line":17,"column":90,"offset":1290}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":571},"end":{"line":17,"column":90,"offset":1290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The goal is to provide a syntax robust enough to match a large portion of regex use cases with minimal code.","position":{"start":{"line":19,"column":1,"offset":1292},"end":{"line":19,"column":109,"offset":1400}}}],"position":{"start":{"line":19,"column":1,"offset":1292},"end":{"line":19,"column":109,"offset":1400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Matching One Character","position":{"start":{"line":21,"column":4,"offset":1405},"end":{"line":21,"column":26,"offset":1427}}}],"position":{"start":{"line":21,"column":1,"offset":1402},"end":{"line":21,"column":26,"offset":1427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first step is to write a function that takes in a one character pattern and a one character text string and returns a boolean indicating if they match. A pattern of ","position":{"start":{"line":23,"column":1,"offset":1429},"end":{"line":23,"column":170,"offset":1598}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"."}],"position":{"start":{"line":23,"column":170,"offset":1598},"end":{"line":23,"column":173,"offset":1601}}},{"type":"text","value":" is considered a wildcard and matches against any character literal.","position":{"start":{"line":23,"column":173,"offset":1601},"end":{"line":23,"column":241,"offset":1669}}}],"position":{"start":{"line":23,"column":1,"offset":1429},"end":{"line":23,"column":241,"offset":1669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here are some examples","position":{"start":{"line":25,"column":1,"offset":1671},"end":{"line":25,"column":23,"offset":1693}}}],"position":{"start":{"line":25,"column":1,"offset":1671},"end":{"line":25,"column":23,"offset":1693}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne('a', 'a')"}],"position":{"start":{"line":27,"column":1,"offset":1695},"end":{"line":27,"column":21,"offset":1715}}},{"type":"text","value":" -> ","position":{"start":{"line":27,"column":21,"offset":1715},"end":{"line":27,"column":25,"offset":1719}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":27,"column":25,"offset":1719},"end":{"line":27,"column":31,"offset":1725}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":31,"offset":1725},"end":{"line":28,"column":1,"offset":1726}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne('.', 'z')"}],"position":{"start":{"line":28,"column":1,"offset":1726},"end":{"line":28,"column":21,"offset":1746}}},{"type":"text","value":" -> ","position":{"start":{"line":28,"column":21,"offset":1746},"end":{"line":28,"column":25,"offset":1750}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":28,"column":25,"offset":1750},"end":{"line":28,"column":31,"offset":1756}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":31,"offset":1756},"end":{"line":29,"column":1,"offset":1757}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne('', 'h')"}],"position":{"start":{"line":29,"column":1,"offset":1757},"end":{"line":29,"column":20,"offset":1776}}},{"type":"text","value":" -> ","position":{"start":{"line":29,"column":20,"offset":1776},"end":{"line":29,"column":24,"offset":1780}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":29,"column":24,"offset":1780},"end":{"line":29,"column":30,"offset":1786}}},{"type":"text","value":"\n","position":{"start":{"line":29,"column":30,"offset":1786},"end":{"line":30,"column":1,"offset":1787}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne('a', 'b')"}],"position":{"start":{"line":30,"column":1,"offset":1787},"end":{"line":30,"column":21,"offset":1807}}},{"type":"text","value":" -> ","position":{"start":{"line":30,"column":21,"offset":1807},"end":{"line":30,"column":25,"offset":1811}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false"}],"position":{"start":{"line":30,"column":25,"offset":1811},"end":{"line":30,"column":32,"offset":1818}}},{"type":"text","value":"\n","position":{"start":{"line":30,"column":32,"offset":1818},"end":{"line":31,"column":1,"offset":1819}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne('p', '')"}],"position":{"start":{"line":31,"column":1,"offset":1819},"end":{"line":31,"column":20,"offset":1838}}},{"type":"text","value":" -> ","position":{"start":{"line":31,"column":20,"offset":1838},"end":{"line":31,"column":24,"offset":1842}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false"}],"position":{"start":{"line":31,"column":24,"offset":1842},"end":{"line":31,"column":31,"offset":1849}}}],"position":{"start":{"line":27,"column":1,"offset":1695},"end":{"line":31,"column":31,"offset":1849}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function matchOne(pattern, text) {\n  if (!pattern) return true; // Any text matches an empty pattern\n  if (!text) return false; // If the pattern is defined but the text is empty, there cannot be a match\n  if (pattern === '.') return true; // Any inputted text matches the wildcard\n  return pattern === text;\n}\n"}],"position":{"start":{"line":33,"column":1,"offset":1851},"end":{"line":40,"column":4,"offset":2171}}}],"position":{"start":{"line":33,"column":1,"offset":1851},"end":{"line":40,"column":4,"offset":2171}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Matching Same Length Strings","position":{"start":{"line":42,"column":4,"offset":2176},"end":{"line":42,"column":32,"offset":2204}}}],"position":{"start":{"line":42,"column":1,"offset":2173},"end":{"line":42,"column":32,"offset":2204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we want to add support for patterns and text strings of greater length. For now, let's only consider a pattern/text pair of the same length. I happen to know that the solution lends itself very naturally to recursion, so we will use it here. We are going to want to repeatedly invoke ","position":{"start":{"line":44,"column":1,"offset":2206},"end":{"line":44,"column":289,"offset":2494}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne"}],"position":{"start":{"line":44,"column":289,"offset":2494},"end":{"line":44,"column":299,"offset":2504}}},{"type":"text","value":" on successive pairs of characters from the pattern/text combination.","position":{"start":{"line":44,"column":299,"offset":2504},"end":{"line":44,"column":368,"offset":2573}}}],"position":{"start":{"line":44,"column":1,"offset":2206},"end":{"line":44,"column":368,"offset":2573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function match(pattern, text) {\n  if (pattern === '') return true;\n  // Our base case - if the pattern is empty, any inputted text is a match\n  else return matchOne(pattern[0], text[0]) && match(pattern.slice(1), text.slice(1));\n}\n"}],"position":{"start":{"line":46,"column":1,"offset":2575},"end":{"line":52,"column":4,"offset":2815}}}],"position":{"start":{"line":46,"column":1,"offset":2575},"end":{"line":52,"column":4,"offset":2815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The above code advances character by character across the the pattern/text pair. It first compares ","position":{"start":{"line":54,"column":1,"offset":2817},"end":{"line":54,"column":100,"offset":2916}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pattern[0]"}],"position":{"start":{"line":54,"column":100,"offset":2916},"end":{"line":54,"column":112,"offset":2928}}},{"type":"text","value":" to ","position":{"start":{"line":54,"column":112,"offset":2928},"end":{"line":54,"column":116,"offset":2932}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text[0]"}],"position":{"start":{"line":54,"column":116,"offset":2932},"end":{"line":54,"column":125,"offset":2941}}},{"type":"text","value":" and then ","position":{"start":{"line":54,"column":125,"offset":2941},"end":{"line":54,"column":135,"offset":2951}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pattern[1]"}],"position":{"start":{"line":54,"column":135,"offset":2951},"end":{"line":54,"column":147,"offset":2963}}},{"type":"text","value":" to ","position":{"start":{"line":54,"column":147,"offset":2963},"end":{"line":54,"column":151,"offset":2967}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text[1]"}],"position":{"start":{"line":54,"column":151,"offset":2967},"end":{"line":54,"column":160,"offset":2976}}},{"type":"text","value":" and continues comparing ","position":{"start":{"line":54,"column":160,"offset":2976},"end":{"line":54,"column":185,"offset":3001}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pattern[i]"}],"position":{"start":{"line":54,"column":185,"offset":3001},"end":{"line":54,"column":197,"offset":3013}}},{"type":"text","value":" to ","position":{"start":{"line":54,"column":197,"offset":3013},"end":{"line":54,"column":201,"offset":3017}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text[i]"}],"position":{"start":{"line":54,"column":201,"offset":3017},"end":{"line":54,"column":210,"offset":3026}}},{"type":"text","value":" until ","position":{"start":{"line":54,"column":210,"offset":3026},"end":{"line":54,"column":217,"offset":3033}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i === pattern.length - 1"}],"position":{"start":{"line":54,"column":217,"offset":3033},"end":{"line":54,"column":243,"offset":3059}}},{"type":"text","value":". If they ever don't match, then we know that the pattern cannot match the text.","position":{"start":{"line":54,"column":243,"offset":3059},"end":{"line":54,"column":323,"offset":3139}}}],"position":{"start":{"line":54,"column":1,"offset":2817},"end":{"line":54,"column":323,"offset":3139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's take an example. Suppose we invoke ","position":{"start":{"line":56,"column":1,"offset":3141},"end":{"line":56,"column":42,"offset":3182}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"match('a.c', 'abc')"}],"position":{"start":{"line":56,"column":42,"offset":3182},"end":{"line":56,"column":63,"offset":3203}}},{"type":"text","value":", which returns ","position":{"start":{"line":56,"column":63,"offset":3203},"end":{"line":56,"column":79,"offset":3219}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne('a', 'a') && match('.c', 'bc')"}],"position":{"start":{"line":56,"column":79,"offset":3219},"end":{"line":56,"column":120,"offset":3260}}},{"type":"text","value":".","position":{"start":{"line":56,"column":120,"offset":3260},"end":{"line":56,"column":121,"offset":3261}}}],"position":{"start":{"line":56,"column":1,"offset":3141},"end":{"line":56,"column":121,"offset":3261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we continue evaluating these functions, we get ","position":{"start":{"line":58,"column":1,"offset":3263},"end":{"line":58,"column":51,"offset":3313}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne('a', 'a') && matchOne('.', 'b') && matchOne('c', 'c') && match(\"\", \"\")"}],"position":{"start":{"line":58,"column":51,"offset":3313},"end":{"line":58,"column":132,"offset":3394}}},{"type":"text","value":", which is just equal to ","position":{"start":{"line":58,"column":132,"offset":3394},"end":{"line":58,"column":157,"offset":3419}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true && true && true && true"}],"position":{"start":{"line":58,"column":157,"offset":3419},"end":{"line":58,"column":187,"offset":3449}}},{"type":"text","value":", So we have a match!","position":{"start":{"line":58,"column":187,"offset":3449},"end":{"line":58,"column":208,"offset":3470}}}],"position":{"start":{"line":58,"column":1,"offset":3263},"end":{"line":58,"column":208,"offset":3470}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"The $ Character","position":{"start":{"line":60,"column":4,"offset":3475},"end":{"line":60,"column":19,"offset":3490}}}],"position":{"start":{"line":60,"column":1,"offset":3472},"end":{"line":60,"column":19,"offset":3490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's add support for the special pattern character ","position":{"start":{"line":62,"column":1,"offset":3492},"end":{"line":62,"column":53,"offset":3544}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"$"}],"position":{"start":{"line":62,"column":53,"offset":3544},"end":{"line":62,"column":56,"offset":3547}}},{"type":"text","value":" that allows us to match the end of a string. The solution simply requires adding an additional base case to the match function.","position":{"start":{"line":62,"column":56,"offset":3547},"end":{"line":62,"column":184,"offset":3675}}}],"position":{"start":{"line":62,"column":1,"offset":3492},"end":{"line":62,"column":184,"offset":3675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function match(pattern, text) {\n  if (pattern === '') return true;\n  if (pattern === '$' && text === '') return true;\n  else return matchOne(pattern[0], text[0]) && match(pattern.slice(1), text.slice(1));\n}\n"}],"position":{"start":{"line":64,"column":1,"offset":3677},"end":{"line":70,"column":4,"offset":3893}}}],"position":{"start":{"line":64,"column":1,"offset":3677},"end":{"line":70,"column":4,"offset":3893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"The ^ Character","position":{"start":{"line":72,"column":4,"offset":3898},"end":{"line":72,"column":19,"offset":3913}}}],"position":{"start":{"line":72,"column":1,"offset":3895},"end":{"line":72,"column":19,"offset":3913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's add support for the special pattern character ","position":{"start":{"line":74,"column":1,"offset":3915},"end":{"line":74,"column":53,"offset":3967}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"^"}],"position":{"start":{"line":74,"column":53,"offset":3967},"end":{"line":74,"column":56,"offset":3970}}},{"type":"text","value":" that allows us to match the beginning of a string. I'm going to introduce a new function called ","position":{"start":{"line":74,"column":56,"offset":3970},"end":{"line":74,"column":153,"offset":4067}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search"}],"position":{"start":{"line":74,"column":153,"offset":4067},"end":{"line":74,"column":161,"offset":4075}}},{"type":"text","value":".","position":{"start":{"line":74,"column":161,"offset":4075},"end":{"line":74,"column":162,"offset":4076}}}],"position":{"start":{"line":74,"column":1,"offset":3915},"end":{"line":74,"column":162,"offset":4076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function search(pattern, text) {\n  if (pattern[0] === '^') {\n    return match(pattern.slice(1), text);\n  }\n}\n"}],"position":{"start":{"line":76,"column":1,"offset":4078},"end":{"line":82,"column":4,"offset":4196}}}],"position":{"start":{"line":76,"column":1,"offset":4078},"end":{"line":82,"column":4,"offset":4196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This function will be the new entry point to our code. Up till this point, we were only matching patterns that began at the beginning of the text. We are simply making that more clear now by forcing the user to preface the pattern with a ","position":{"start":{"line":84,"column":1,"offset":4198},"end":{"line":84,"column":239,"offset":4436}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"^"}],"position":{"start":{"line":84,"column":239,"offset":4436},"end":{"line":84,"column":242,"offset":4439}}},{"type":"text","value":". But how do we support patterns that appear anywhere within the text?","position":{"start":{"line":84,"column":242,"offset":4439},"end":{"line":84,"column":312,"offset":4509}}}],"position":{"start":{"line":84,"column":1,"offset":4198},"end":{"line":84,"column":312,"offset":4509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Matches Starting Anywhere","position":{"start":{"line":86,"column":4,"offset":4514},"end":{"line":86,"column":29,"offset":4539}}}],"position":{"start":{"line":86,"column":1,"offset":4511},"end":{"line":86,"column":29,"offset":4539}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Currently, the following return ","position":{"start":{"line":88,"column":1,"offset":4541},"end":{"line":88,"column":33,"offset":4573}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":88,"column":33,"offset":4573},"end":{"line":88,"column":39,"offset":4579}}}],"position":{"start":{"line":88,"column":1,"offset":4541},"end":{"line":88,"column":39,"offset":4579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"^abc\", \"abc\")"}],"position":{"start":{"line":90,"column":1,"offset":4581},"end":{"line":90,"column":24,"offset":4604}}},{"type":"text","value":"\n","position":{"start":{"line":90,"column":24,"offset":4604},"end":{"line":91,"column":1,"offset":4605}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"^abcd\", \"abcd\")"}],"position":{"start":{"line":91,"column":1,"offset":4605},"end":{"line":91,"column":26,"offset":4630}}}],"position":{"start":{"line":90,"column":1,"offset":4581},"end":{"line":91,"column":26,"offset":4630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But ","position":{"start":{"line":93,"column":1,"offset":4632},"end":{"line":93,"column":5,"offset":4636}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"bc\", \"abcd\")"}],"position":{"start":{"line":93,"column":5,"offset":4636},"end":{"line":93,"column":27,"offset":4658}}},{"type":"text","value":" will just return ","position":{"start":{"line":93,"column":27,"offset":4658},"end":{"line":93,"column":45,"offset":4676}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":93,"column":45,"offset":4676},"end":{"line":93,"column":56,"offset":4687}}},{"type":"text","value":". We want it to return ","position":{"start":{"line":93,"column":56,"offset":4687},"end":{"line":93,"column":79,"offset":4710}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":93,"column":79,"offset":4710},"end":{"line":93,"column":85,"offset":4716}}}],"position":{"start":{"line":93,"column":1,"offset":4632},"end":{"line":93,"column":85,"offset":4716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the user does not specify that the pattern matches the beginning of the text, then we want to search for that pattern at every possible starting point within the text. We will default to this behavior if the pattern does not begin with ","position":{"start":{"line":95,"column":1,"offset":4718},"end":{"line":95,"column":240,"offset":4957}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"^"}],"position":{"start":{"line":95,"column":240,"offset":4957},"end":{"line":95,"column":243,"offset":4960}}},{"type":"raw","value":"<sup>","position":{"start":{"line":95,"column":243,"offset":4960},"end":{"line":95,"column":248,"offset":4965}}},{"type":"element","tagName":"a","properties":{"href":"#footnote1"},"children":[{"type":"text","value":"1","position":{"start":{"line":95,"column":249,"offset":4966},"end":{"line":95,"column":250,"offset":4967}}}],"position":{"start":{"line":95,"column":248,"offset":4965},"end":{"line":95,"column":263,"offset":4980}}},{"type":"raw","value":"</sup>","position":{"start":{"line":95,"column":263,"offset":4980},"end":{"line":95,"column":269,"offset":4986}}},{"type":"text","value":".","position":{"start":{"line":95,"column":269,"offset":4986},"end":{"line":95,"column":270,"offset":4987}}}],"position":{"start":{"line":95,"column":1,"offset":4718},"end":{"line":95,"column":270,"offset":4987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function search(pattern, text) {\n  if (pattern[0] === '^') {\n    return match(pattern.slice(1), text);\n  } else {\n    // This code will run match(pattern, text.slice(index)) on every index of the text.\n    // This means that we test the pattern against every starting point of the text.\n    return text.split('').some((_, index) => {\n      return match(pattern, text.slice(index));\n    });\n  }\n}\n"}],"position":{"start":{"line":97,"column":1,"offset":4989},"end":{"line":109,"column":4,"offset":5394}}}],"position":{"start":{"line":97,"column":1,"offset":4989},"end":{"line":109,"column":4,"offset":5394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"The ? Character","position":{"start":{"line":111,"column":4,"offset":5399},"end":{"line":111,"column":19,"offset":5414}}}],"position":{"start":{"line":111,"column":1,"offset":5396},"end":{"line":111,"column":19,"offset":5414}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to be able to match 0 to 1 of the character before ","position":{"start":{"line":113,"column":1,"offset":5416},"end":{"line":113,"column":60,"offset":5475}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":113,"column":60,"offset":5475},"end":{"line":113,"column":63,"offset":5478}}},{"type":"text","value":".","position":{"start":{"line":113,"column":63,"offset":5478},"end":{"line":113,"column":64,"offset":5479}}}],"position":{"start":{"line":113,"column":1,"offset":5416},"end":{"line":113,"column":64,"offset":5479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here are some examples","position":{"start":{"line":115,"column":1,"offset":5481},"end":{"line":115,"column":23,"offset":5503}}}],"position":{"start":{"line":115,"column":1,"offset":5481},"end":{"line":115,"column":23,"offset":5503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"ab?c\", \"ac\")"}],"position":{"start":{"line":117,"column":1,"offset":5505},"end":{"line":117,"column":23,"offset":5527}}},{"type":"text","value":" -> ","position":{"start":{"line":117,"column":23,"offset":5527},"end":{"line":117,"column":27,"offset":5531}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":117,"column":27,"offset":5531},"end":{"line":117,"column":33,"offset":5537}}},{"type":"text","value":"\n","position":{"start":{"line":117,"column":33,"offset":5537},"end":{"line":118,"column":1,"offset":5538}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"ab?c\", \"abc\")"}],"position":{"start":{"line":118,"column":1,"offset":5538},"end":{"line":118,"column":24,"offset":5561}}},{"type":"text","value":" -> ","position":{"start":{"line":118,"column":24,"offset":5561},"end":{"line":118,"column":28,"offset":5565}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":118,"column":28,"offset":5565},"end":{"line":118,"column":34,"offset":5571}}},{"type":"text","value":"\n","position":{"start":{"line":118,"column":34,"offset":5571},"end":{"line":119,"column":1,"offset":5572}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"a?b?c?\", \"abc\")"}],"position":{"start":{"line":119,"column":1,"offset":5572},"end":{"line":119,"column":26,"offset":5597}}},{"type":"text","value":" -> ","position":{"start":{"line":119,"column":26,"offset":5597},"end":{"line":119,"column":30,"offset":5601}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":119,"column":30,"offset":5601},"end":{"line":119,"column":36,"offset":5607}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":36,"offset":5607},"end":{"line":120,"column":1,"offset":5608}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"a?b?c?\", \"\")"}],"position":{"start":{"line":120,"column":1,"offset":5608},"end":{"line":120,"column":23,"offset":5630}}},{"type":"text","value":" -> ","position":{"start":{"line":120,"column":23,"offset":5630},"end":{"line":120,"column":27,"offset":5634}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":120,"column":27,"offset":5634},"end":{"line":120,"column":33,"offset":5640}}}],"position":{"start":{"line":117,"column":1,"offset":5505},"end":{"line":120,"column":33,"offset":5640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first step is to modify ","position":{"start":{"line":122,"column":1,"offset":5642},"end":{"line":122,"column":29,"offset":5670}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"match"}],"position":{"start":{"line":122,"column":29,"offset":5670},"end":{"line":122,"column":36,"offset":5677}}},{"type":"text","value":" to detect when a ","position":{"start":{"line":122,"column":36,"offset":5677},"end":{"line":122,"column":54,"offset":5695}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":122,"column":54,"offset":5695},"end":{"line":122,"column":57,"offset":5698}}},{"type":"text","value":" character is present and then delegate to the ","position":{"start":{"line":122,"column":57,"offset":5698},"end":{"line":122,"column":104,"offset":5745}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchQuestion"}],"position":{"start":{"line":122,"column":104,"offset":5745},"end":{"line":122,"column":119,"offset":5760}}},{"type":"text","value":" function, which we will define shortly.","position":{"start":{"line":122,"column":119,"offset":5760},"end":{"line":122,"column":159,"offset":5800}}}],"position":{"start":{"line":122,"column":1,"offset":5642},"end":{"line":122,"column":159,"offset":5800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function match(pattern, text) {\n  if (pattern === '') {\n    return true;\n  } else if (pattern === '$' && text === '') {\n    return true;\n    // Notice that we are looking at pattern[1] instead of pattern[0].\n    // pattern[0] is the character to match 0 or 1 of.\n  } else if (pattern[1] === '?') {\n    return matchQuestion(pattern, text);\n  } else {\n    return matchOne(pattern[0], text[0]) && match(pattern.slice(1), text.slice(1));\n  }\n}\n"}],"position":{"start":{"line":124,"column":1,"offset":5802},"end":{"line":138,"column":4,"offset":6251}}}],"position":{"start":{"line":124,"column":1,"offset":5802},"end":{"line":138,"column":4,"offset":6251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchQuestion"}],"position":{"start":{"line":140,"column":1,"offset":6253},"end":{"line":140,"column":16,"offset":6268}}},{"type":"text","value":" needs to handle two cases:","position":{"start":{"line":140,"column":16,"offset":6268},"end":{"line":140,"column":43,"offset":6295}}}],"position":{"start":{"line":140,"column":1,"offset":6253},"end":{"line":140,"column":43,"offset":6295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Where the character before the ","position":{"start":{"line":142,"column":4,"offset":6300},"end":{"line":142,"column":35,"offset":6331}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":142,"column":35,"offset":6331},"end":{"line":142,"column":38,"offset":6334}}},{"type":"text","value":" is not matched but the text matches the remainder of the pattern (everything after the ","position":{"start":{"line":142,"column":38,"offset":6334},"end":{"line":142,"column":126,"offset":6422}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":142,"column":126,"offset":6422},"end":{"line":142,"column":129,"offset":6425}}},{"type":"text","value":").","position":{"start":{"line":142,"column":129,"offset":6425},"end":{"line":142,"column":131,"offset":6427}}}],"position":{"start":{"line":142,"column":1,"offset":6297},"end":{"line":142,"column":131,"offset":6427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Where the character before the ","position":{"start":{"line":143,"column":4,"offset":6431},"end":{"line":143,"column":35,"offset":6462}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":143,"column":35,"offset":6462},"end":{"line":143,"column":38,"offset":6465}}},{"type":"text","value":" is matched and the rest of the text (minus the 1 matched character) matches the remainder of the pattern.","position":{"start":{"line":143,"column":38,"offset":6465},"end":{"line":143,"column":144,"offset":6571}}}],"position":{"start":{"line":143,"column":1,"offset":6428},"end":{"line":143,"column":144,"offset":6571}}},{"type":"text","value":"\n"}],"position":{"start":{"line":142,"column":1,"offset":6297},"end":{"line":143,"column":144,"offset":6571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If either of these cases is truthy, then ","position":{"start":{"line":145,"column":1,"offset":6573},"end":{"line":145,"column":42,"offset":6614}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchQuestion"}],"position":{"start":{"line":145,"column":42,"offset":6614},"end":{"line":145,"column":57,"offset":6629}}},{"type":"text","value":" can return ","position":{"start":{"line":145,"column":57,"offset":6629},"end":{"line":145,"column":69,"offset":6641}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":145,"column":69,"offset":6641},"end":{"line":145,"column":75,"offset":6647}}},{"type":"text","value":".","position":{"start":{"line":145,"column":75,"offset":6647},"end":{"line":145,"column":76,"offset":6648}}}],"position":{"start":{"line":145,"column":1,"offset":6573},"end":{"line":145,"column":76,"offset":6648}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's consider the first case. How do we check if the text matches everything in the pattern except the ","position":{"start":{"line":147,"column":1,"offset":6650},"end":{"line":147,"column":105,"offset":6754}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"_?"}],"position":{"start":{"line":147,"column":105,"offset":6754},"end":{"line":147,"column":109,"offset":6758}}},{"type":"text","value":" syntax? In order words, how do we check if the character before the ","position":{"start":{"line":147,"column":109,"offset":6758},"end":{"line":147,"column":178,"offset":6827}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":147,"column":178,"offset":6827},"end":{"line":147,"column":181,"offset":6830}}},{"type":"text","value":" appears 0 times? We strip 2 characters off the pattern (the first character is the one before the ","position":{"start":{"line":147,"column":181,"offset":6830},"end":{"line":147,"column":280,"offset":6929}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":147,"column":280,"offset":6929},"end":{"line":147,"column":283,"offset":6932}}},{"type":"text","value":" and the second is the ","position":{"start":{"line":147,"column":283,"offset":6932},"end":{"line":147,"column":306,"offset":6955}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":147,"column":306,"offset":6955},"end":{"line":147,"column":309,"offset":6958}}},{"type":"text","value":" itself) and invoke the match function.","position":{"start":{"line":147,"column":309,"offset":6958},"end":{"line":147,"column":348,"offset":6997}}}],"position":{"start":{"line":147,"column":1,"offset":6650},"end":{"line":147,"column":348,"offset":6997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function matchQuestion(pattern, text) {\n  return match(pattern.slice(2), text);\n}\n"}],"position":{"start":{"line":149,"column":1,"offset":6999},"end":{"line":153,"column":4,"offset":7090}}}],"position":{"start":{"line":149,"column":1,"offset":6999},"end":{"line":153,"column":4,"offset":7090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The second case is a little more challenging, but just like before, it reuses functions we've already written","position":{"start":{"line":155,"column":1,"offset":7092},"end":{"line":155,"column":110,"offset":7201}}}],"position":{"start":{"line":155,"column":1,"offset":7092},"end":{"line":155,"column":110,"offset":7201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function matchQuestion(pattern, text) {\n  if (matchOne(pattern[0], text[0]) && match(pattern.slice(2), text.slice(1))) {\n    return true;\n  } else {\n    return match(pattern.slice(2), text);\n  }\n}\n"}],"position":{"start":{"line":157,"column":1,"offset":7203},"end":{"line":165,"column":4,"offset":7409}}}],"position":{"start":{"line":157,"column":1,"offset":7203},"end":{"line":165,"column":4,"offset":7409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the ","position":{"start":{"line":167,"column":1,"offset":7411},"end":{"line":167,"column":8,"offset":7418}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text[0]"}],"position":{"start":{"line":167,"column":8,"offset":7418},"end":{"line":167,"column":17,"offset":7427}}},{"type":"text","value":" matches ","position":{"start":{"line":167,"column":17,"offset":7427},"end":{"line":167,"column":26,"offset":7436}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pattern[0]"}],"position":{"start":{"line":167,"column":26,"offset":7436},"end":{"line":167,"column":38,"offset":7448}}},{"type":"text","value":", and the rest of the text (minus the part that is matched by ","position":{"start":{"line":167,"column":38,"offset":7448},"end":{"line":167,"column":100,"offset":7510}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchOne"}],"position":{"start":{"line":167,"column":100,"offset":7510},"end":{"line":167,"column":110,"offset":7520}}},{"type":"text","value":") matches the remainder of the pattern, then we are golden. Note that we could rewrite the code like this:","position":{"start":{"line":167,"column":110,"offset":7520},"end":{"line":167,"column":216,"offset":7626}}}],"position":{"start":{"line":167,"column":1,"offset":7411},"end":{"line":167,"column":216,"offset":7626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function matchQuestion(pattern, text) {\n  return (\n    (matchOne(pattern[0], text[0]) && match(pattern.slice(2), text.slice(1))) ||\n    match(pattern.slice(2), text)\n  );\n}\n"}],"position":{"start":{"line":169,"column":1,"offset":7628},"end":{"line":176,"column":4,"offset":7810}}}],"position":{"start":{"line":169,"column":1,"offset":7628},"end":{"line":176,"column":4,"offset":7810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The one thing I like about this latter approach is that the boolean OR makes it explicitly clear that there are two cases, either of which may be true.","position":{"start":{"line":178,"column":1,"offset":7812},"end":{"line":178,"column":152,"offset":7963}}}],"position":{"start":{"line":178,"column":1,"offset":7812},"end":{"line":178,"column":152,"offset":7963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":180,"column":4,"offset":7968},"end":{"line":180,"column":8,"offset":7972}}},{"type":"text","value":"*","position":{"start":{"line":180,"column":8,"offset":7972},"end":{"line":180,"column":10,"offset":7974}}},{"type":"text","value":" Character","position":{"start":{"line":180,"column":10,"offset":7974},"end":{"line":180,"column":20,"offset":7984}}}],"position":{"start":{"line":180,"column":1,"offset":7965},"end":{"line":180,"column":20,"offset":7984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to be able to match the character before the ","position":{"start":{"line":182,"column":1,"offset":7986},"end":{"line":182,"column":54,"offset":8039}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"*"}],"position":{"start":{"line":182,"column":54,"offset":8039},"end":{"line":182,"column":57,"offset":8042}}},{"type":"text","value":" 0 or more times.","position":{"start":{"line":182,"column":57,"offset":8042},"end":{"line":182,"column":74,"offset":8059}}}],"position":{"start":{"line":182,"column":1,"offset":7986},"end":{"line":182,"column":74,"offset":8059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All of these should return ","position":{"start":{"line":184,"column":1,"offset":8061},"end":{"line":184,"column":28,"offset":8088}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}],"position":{"start":{"line":184,"column":28,"offset":8088},"end":{"line":184,"column":34,"offset":8094}}},{"type":"text","value":".","position":{"start":{"line":184,"column":34,"offset":8094},"end":{"line":184,"column":35,"offset":8095}}}],"position":{"start":{"line":184,"column":1,"offset":8061},"end":{"line":184,"column":35,"offset":8095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"a*\", \"\")"}],"position":{"start":{"line":186,"column":1,"offset":8097},"end":{"line":186,"column":19,"offset":8115}}},{"type":"text","value":"\n","position":{"start":{"line":186,"column":19,"offset":8115},"end":{"line":187,"column":1,"offset":8116}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"a*\", \"aaaaaaa\")"}],"position":{"start":{"line":187,"column":1,"offset":8116},"end":{"line":187,"column":26,"offset":8141}}},{"type":"text","value":"\n","position":{"start":{"line":187,"column":26,"offset":8141},"end":{"line":188,"column":1,"offset":8142}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search(\"a*b\", \"aaaaaaab\")"}],"position":{"start":{"line":188,"column":1,"offset":8142},"end":{"line":188,"column":28,"offset":8169}}}],"position":{"start":{"line":186,"column":1,"offset":8097},"end":{"line":188,"column":28,"offset":8169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Similar to what we did when supporting ","position":{"start":{"line":190,"column":1,"offset":8171},"end":{"line":190,"column":40,"offset":8210}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"?"}],"position":{"start":{"line":190,"column":40,"offset":8210},"end":{"line":190,"column":43,"offset":8213}}},{"type":"text","value":", we wan to delegate to a ","position":{"start":{"line":190,"column":43,"offset":8213},"end":{"line":190,"column":69,"offset":8239}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchStar"}],"position":{"start":{"line":190,"column":69,"offset":8239},"end":{"line":190,"column":80,"offset":8250}}},{"type":"text","value":" function within our ","position":{"start":{"line":190,"column":80,"offset":8250},"end":{"line":190,"column":101,"offset":8271}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"match"}],"position":{"start":{"line":190,"column":101,"offset":8271},"end":{"line":190,"column":108,"offset":8278}}},{"type":"text","value":" function","position":{"start":{"line":190,"column":108,"offset":8278},"end":{"line":190,"column":117,"offset":8287}}}],"position":{"start":{"line":190,"column":1,"offset":8171},"end":{"line":190,"column":117,"offset":8287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function match(pattern, text) {\n  if (pattern === '') {\n    return true;\n  } else if (pattern === '$' && text === '') {\n    return true;\n  } else if (pattern[1] === '?') {\n    return matchQuestion(pattern, text);\n  } else if (pattern[1] === '*') {\n    return matchStar(pattern, text);\n  } else {\n    return matchOne(pattern[0], text[0]) && match(pattern.slice(1), text.slice(1));\n  }\n}\n"}],"position":{"start":{"line":192,"column":1,"offset":8289},"end":{"line":206,"column":4,"offset":8684}}}],"position":{"start":{"line":192,"column":1,"offset":8289},"end":{"line":206,"column":4,"offset":8684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchStar"}],"position":{"start":{"line":208,"column":1,"offset":8686},"end":{"line":208,"column":12,"offset":8697}}},{"type":"text","value":", like ","position":{"start":{"line":208,"column":12,"offset":8697},"end":{"line":208,"column":19,"offset":8704}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchQuestion"}],"position":{"start":{"line":208,"column":19,"offset":8704},"end":{"line":208,"column":34,"offset":8719}}},{"type":"text","value":", also needs to handle two cases:","position":{"start":{"line":208,"column":34,"offset":8719},"end":{"line":208,"column":67,"offset":8752}}}],"position":{"start":{"line":208,"column":1,"offset":8686},"end":{"line":208,"column":67,"offset":8752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Where the character before the ","position":{"start":{"line":210,"column":4,"offset":8757},"end":{"line":210,"column":35,"offset":8788}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"*"}],"position":{"start":{"line":210,"column":35,"offset":8788},"end":{"line":210,"column":38,"offset":8791}}},{"type":"text","value":" is not matched but the text matches the remainder of the pattern (everything after the ","position":{"start":{"line":210,"column":38,"offset":8791},"end":{"line":210,"column":126,"offset":8879}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"*"}],"position":{"start":{"line":210,"column":126,"offset":8879},"end":{"line":210,"column":129,"offset":8882}}},{"type":"text","value":").","position":{"start":{"line":210,"column":129,"offset":8882},"end":{"line":210,"column":131,"offset":8884}}}],"position":{"start":{"line":210,"column":1,"offset":8754},"end":{"line":210,"column":131,"offset":8884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Where the character before the ","position":{"start":{"line":211,"column":4,"offset":8888},"end":{"line":211,"column":35,"offset":8919}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"*"}],"position":{"start":{"line":211,"column":35,"offset":8919},"end":{"line":211,"column":38,"offset":8922}}},{"type":"text","value":" is matched one or more times and the rest of the text matches the remainder of the pattern.","position":{"start":{"line":211,"column":38,"offset":8922},"end":{"line":211,"column":130,"offset":9014}}}],"position":{"start":{"line":211,"column":1,"offset":8885},"end":{"line":211,"column":130,"offset":9014}}},{"type":"text","value":"\n"}],"position":{"start":{"line":210,"column":1,"offset":8754},"end":{"line":211,"column":130,"offset":9014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since there are two cases that both result in a match (0 matches OR more matches), we know that ","position":{"start":{"line":213,"column":1,"offset":9016},"end":{"line":213,"column":97,"offset":9112}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchStar"}],"position":{"start":{"line":213,"column":97,"offset":9112},"end":{"line":213,"column":108,"offset":9123}}},{"type":"text","value":" can be implemented with a boolean OR. Furthermore, case 1 for ","position":{"start":{"line":213,"column":108,"offset":9123},"end":{"line":213,"column":171,"offset":9186}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchStar"}],"position":{"start":{"line":213,"column":171,"offset":9186},"end":{"line":213,"column":182,"offset":9197}}},{"type":"text","value":" is exactly the same as it was for ","position":{"start":{"line":213,"column":182,"offset":9197},"end":{"line":213,"column":217,"offset":9232}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"matchQuestion"}],"position":{"start":{"line":213,"column":217,"offset":9232},"end":{"line":213,"column":232,"offset":9247}}},{"type":"text","value":" and can be implemented identically using ","position":{"start":{"line":213,"column":232,"offset":9247},"end":{"line":213,"column":274,"offset":9289}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"match(pattern.slice(2), text)"}],"position":{"start":{"line":213,"column":274,"offset":9289},"end":{"line":213,"column":305,"offset":9320}}},{"type":"text","value":". That means we only need to formulate an expression that satisfies case 2.","position":{"start":{"line":213,"column":305,"offset":9320},"end":{"line":213,"column":380,"offset":9395}}}],"position":{"start":{"line":213,"column":1,"offset":9016},"end":{"line":213,"column":380,"offset":9395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function matchStar(pattern, text) {\n  return (\n    (matchOne(pattern[0], text[0]) && match(pattern, text.slice(1))) || match(pattern.slice(2), text)\n  );\n}\n"}],"position":{"start":{"line":215,"column":1,"offset":9397},"end":{"line":221,"column":4,"offset":9562}}}],"position":{"start":{"line":215,"column":1,"offset":9397},"end":{"line":221,"column":4,"offset":9562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Refactoring","position":{"start":{"line":223,"column":4,"offset":9567},"end":{"line":223,"column":15,"offset":9578}}}],"position":{"start":{"line":223,"column":1,"offset":9564},"end":{"line":223,"column":15,"offset":9578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can now go back and cleverly simplify ","position":{"start":{"line":225,"column":1,"offset":9580},"end":{"line":225,"column":42,"offset":9621}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"search"}],"position":{"start":{"line":225,"column":42,"offset":9621},"end":{"line":225,"column":50,"offset":9629}}},{"type":"text","value":" using a trick I learned in Peter Norvig's ","position":{"start":{"line":225,"column":50,"offset":9629},"end":{"line":225,"column":93,"offset":9672}}},{"type":"element","tagName":"a","properties":{"href":"https://www.udacity.com/course/design-of-computer-programs--cs212"},"children":[{"type":"text","value":"class","position":{"start":{"line":225,"column":94,"offset":9673},"end":{"line":225,"column":99,"offset":9678}}}],"position":{"start":{"line":225,"column":93,"offset":9672},"end":{"line":225,"column":167,"offset":9746}}},{"type":"text","value":".","position":{"start":{"line":225,"column":167,"offset":9746},"end":{"line":225,"column":168,"offset":9747}}}],"position":{"start":{"line":225,"column":1,"offset":9580},"end":{"line":225,"column":168,"offset":9747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function search(pattern, text) {\n  if (pattern[0] === '^') {\n    return match(pattern.slice(1), text);\n  } else {\n    return match('.*' + pattern, text);\n  }\n}\n"}],"position":{"start":{"line":227,"column":1,"offset":9749},"end":{"line":235,"column":4,"offset":9918}}}],"position":{"start":{"line":227,"column":1,"offset":9749},"end":{"line":235,"column":4,"offset":9918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We use the ","position":{"start":{"line":237,"column":1,"offset":9920},"end":{"line":237,"column":12,"offset":9931}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"*"}],"position":{"start":{"line":237,"column":12,"offset":9931},"end":{"line":237,"column":15,"offset":9934}}},{"type":"text","value":" character itself to allow for the pattern to appear anywhere in the string. The prepended ","position":{"start":{"line":237,"column":15,"offset":9934},"end":{"line":237,"column":106,"offset":10025}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".*"}],"position":{"start":{"line":237,"column":106,"offset":10025},"end":{"line":237,"column":110,"offset":10029}}},{"type":"text","value":" says that any number of any character can appear before the pattern we wish to match.","position":{"start":{"line":237,"column":110,"offset":10029},"end":{"line":237,"column":196,"offset":10115}}}],"position":{"start":{"line":237,"column":1,"offset":9920},"end":{"line":237,"column":196,"offset":10115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Conclusion","position":{"start":{"line":239,"column":4,"offset":10120},"end":{"line":239,"column":14,"offset":10130}}}],"position":{"start":{"line":239,"column":1,"offset":10117},"end":{"line":239,"column":14,"offset":10130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's remarkable how simple and elegant the code for such a sophisticated and generalized program can be. The full source is available in this ","position":{"start":{"line":241,"column":1,"offset":10132},"end":{"line":241,"column":143,"offset":10274}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/nadrane/build-your-own-regex"},"children":[{"type":"text","value":"GitHub repository","position":{"start":{"line":241,"column":144,"offset":10275},"end":{"line":241,"column":161,"offset":10292}}}],"position":{"start":{"line":241,"column":143,"offset":10274},"end":{"line":241,"column":211,"offset":10342}}}],"position":{"start":{"line":241,"column":1,"offset":10132},"end":{"line":241,"column":211,"offset":10342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is a ","position":{"start":{"line":243,"column":1,"offset":10344},"end":{"line":243,"column":11,"offset":10354}}},{"type":"element","tagName":"a","properties":{"href":"https://nickdrane.com/regex-and-automated-test-fuzzing/"},"children":[{"type":"text","value":"follow up article","position":{"start":{"line":243,"column":12,"offset":10355},"end":{"line":243,"column":29,"offset":10372}}}],"position":{"start":{"line":243,"column":11,"offset":10354},"end":{"line":243,"column":87,"offset":10430}}},{"type":"text","value":" where I fuzz test the regex engine.","position":{"start":{"line":243,"column":87,"offset":10430},"end":{"line":243,"column":123,"offset":10466}}}],"position":{"start":{"line":243,"column":1,"offset":10344},"end":{"line":243,"column":123,"offset":10466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Footnotes","position":{"start":{"line":245,"column":6,"offset":10473},"end":{"line":245,"column":15,"offset":10482}}}],"position":{"start":{"line":245,"column":1,"offset":10468},"end":{"line":245,"column":15,"offset":10482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<a name=\"footnote1\">","position":{"start":{"line":247,"column":1,"offset":10484},"end":{"line":247,"column":21,"offset":10504}}},{"type":"text","value":"1","position":{"start":{"line":247,"column":21,"offset":10504},"end":{"line":247,"column":22,"offset":10505}}},{"type":"raw","value":"</a>","position":{"start":{"line":247,"column":22,"offset":10505},"end":{"line":247,"column":26,"offset":10509}}},{"type":"text","value":": There is a small bug in this code that I'm choosing to ignore. We don't account for the case that text is an empty string. Currently when ","position":{"start":{"line":247,"column":26,"offset":10509},"end":{"line":247,"column":166,"offset":10649}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text === ''"}],"position":{"start":{"line":247,"column":166,"offset":10649},"end":{"line":247,"column":179,"offset":10662}}},{"type":"text","value":", ","position":{"start":{"line":247,"column":179,"offset":10662},"end":{"line":247,"column":181,"offset":10664}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text.split(\"\")"}],"position":{"start":{"line":247,"column":181,"offset":10664},"end":{"line":247,"column":197,"offset":10680}}},{"type":"text","value":" will return ","position":{"start":{"line":247,"column":197,"offset":10680},"end":{"line":247,"column":210,"offset":10693}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[]"}],"position":{"start":{"line":247,"column":210,"offset":10693},"end":{"line":247,"column":214,"offset":10697}}},{"type":"text","value":" and will not appropriately call ","position":{"start":{"line":247,"column":214,"offset":10697},"end":{"line":247,"column":247,"offset":10730}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"match"}],"position":{"start":{"line":247,"column":247,"offset":10730},"end":{"line":247,"column":254,"offset":10737}}},{"type":"text","value":".","position":{"start":{"line":247,"column":254,"offset":10737},"end":{"line":247,"column":255,"offset":10738}}}],"position":{"start":{"line":247,"column":1,"offset":10484},"end":{"line":247,"column":255,"offset":10738}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":248,"column":1,"offset":10739}}}}