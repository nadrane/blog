{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/index.jsx","webpack:///./src/components/sideBarList/index.js","webpack:///./src/components/categoryList.jsx","webpack:///./src/components/recentPosts.jsx","webpack:///./src/components/popularPosts.jsx","webpack:///./src/components/layout/index.jsx"],"names":["NotFoundPage","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Header","siteTitle","className","styles","headerWrapper","header","style","borderBottom","to","color","textDecoration","flexGrow","headerLinks","SideBarList","items","label","link","sideBarSection","sideBarLabel","marginLeft","map","item","idx","sideBarEntry","key","name","CategoryList","sortedCategories","allMarkdownRemark","nodes","filter","node","frontmatter","categories","reduce","accum","category","found","findIndex","entry","count","push","sort","a","b","split","join","RecentPosts","formattedLinks","title","url","popularPosts","Layout","errors","siteMetadata","site","htmlAttributes","lang","meta","content","description","keywords","main","contentWrapper","sidebar"],"mappings":"0FAAA,oCAUeA,UAPM,kBACnB,kBAAC,IAAD,KACE,yCACA,yF,iCCNJ,mHAcyBC,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACzDC,EAAYH,EACdA,EAAKA,KACLD,EAAgBE,IAAUF,EAAgBE,GAAOD,KAErD,OACE,kBAAC,IAAMI,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpBN,EAAkCM,EAAlCN,KAAMC,EAA4BK,EAA5BL,MAAOC,EAAqBI,EAArBJ,OAAQK,EAAaD,EAAbC,SAE7B,OACE,kBAACZ,EAAmBa,SAApB,KACG,SAAAT,GAAe,OACd,kBAACD,EAAD,CACEE,KAAMA,EACNC,MAAOA,EACPC,OAAQA,GAAUK,EAClBR,gBAAiBA,Q,oBCzC3B,IAAsBU,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,wTCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEpB,IAAMqB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,qzDC8BIC,EAjCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,yBAAKC,UAAWC,IAAOC,eACrB,yBAAKF,UAAWC,IAAOE,QACrB,wBAAIC,MAAO,CAAEC,aAAc,SACzB,kBAAC,IAAD,CACEC,GAAG,IACHF,MAAO,CACLG,MAAO,QACPC,eAAgB,SAGjBT,IAGL,yBAAKK,MAAO,CAAEK,SAAU,KACxB,wBAAIT,UAAWC,IAAOS,aAIpB,4BACE,kBAAC,IAAD,CAAMJ,GAAG,YAAT,YAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,aAAT,iB,kFCNKK,EAjBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAaC,GAAY,EAAlBC,KAAkB,EAAZD,OAClC,OACE,yBAAKb,UAAWC,IAAOc,gBACrB,wBAAIf,UAAWC,IAAOe,cAAeH,GACrC,wBAAIT,MAAO,CAAEa,WAAY,IACtBL,EAAMM,IAAI,SAACC,EAAMC,GAAP,OACT,wBAAIpB,UAAWC,IAAOoB,aAAcC,IAAKF,GACvC,kBAAC,IAAD,CAAMhB,MAAO,CAAEG,MAAO,WAAaD,GAAIa,EAAKL,MACzCK,EAAKI,YCgCLC,EAxCM,kBACnB,kBAAC,IAAD,CACE7C,MAAK,YAWLC,OAAQ,SAAAF,GACN,IAcM+C,EAduB/C,EAAKgD,kBAAkBC,MACjDC,OAAO,SAAAC,GAAI,OAAIA,EAAKC,YAAYC,aAChCC,OAAO,SAACC,EAAOJ,GAAU,IAAD,+GACZK,EADY,EAEfC,EAAQF,EAAMG,UAAU,SAAAC,GAAK,OAAIA,EAAMd,OAASW,KACvC,IAAXC,EACFF,EAAME,GAAOG,QAEbL,EAAMM,KAAK,CAAEhB,KAAMW,EAAUI,MAAO,KALxC,EAAuBT,EAAKC,YAAYC,WAAxC,wDAAoD,CAAC,IAAD,yBAQpD,OAAOE,GACN,IAGFO,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElB,KAAOmB,EAAEnB,KAAO,EAAIkB,EAAElB,KAAOmB,EAAEnB,MAAQ,EAAI,IAC7DL,IAAI,gBAAGK,EAAH,EAAGA,KAAH,MAAsB,CACzBA,KAASA,EAAL,KADD,EAASe,MACR,IACJxB,KAAK,cAAeS,EAAKoB,MAAM,KAAKC,KAAK,QAG7C,OAAO,kBAAC,EAAD,CAAahC,MAAOa,EAAkBZ,MAAM,gBAlCvD,U,SC4BagC,EA7BK,kBAClB,kBAAC,IAAD,CACElE,MAAK,YAgBLC,OAAQ,SAAAF,GACN,IAAMoE,EAAiBpE,EAAKgD,kBAAkBC,MAAMT,IAAI,SAAAW,GAAI,MAAK,CAC/DN,KAAMM,EAAKC,YAAYiB,MACvBjC,KAAMe,EAAKC,YAAYkB,OAGzB,OAAO,kBAAC,EAAD,CAAapC,MAAOkC,EAAgBjC,MAAM,uBAvBrD,UCiBaoC,EAlBM,WAenB,OAAO,kBAAC,EAAD,CAAarC,MAdA,CAClB,CACEW,KAAM,mDACNT,KAAM,mDAER,CACES,KAAM,qDACNT,KAAM,8CAER,CAAES,KAAM,qDAAsDT,KAAM,wBACpE,CAAES,KAAM,qCAAsCT,KAAM,gCACpD,CAAES,KAAM,kDAAmDT,KAAM,qCAG3BD,MAAM,wB,2BC0CjCqC,IA/CA,SAAC,GAAD,IAAGjE,EAAH,EAAGA,SAAH,OACb,kBAAC,IAAD,CACEN,MAAK,aAWLC,OAAQ,SAACF,EAAMyE,GACb,IAAMC,EAAe1E,EAAK2E,KAAKD,aAC/B,OACE,6BACE,kBAAC,IAAD,CACEL,MAAOK,EAAaL,MACpBO,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CACJ,CAAEjC,KAAM,cAAekC,QAASL,EAAaM,aAC7C,CAAEnC,KAAM,WAAYkC,QAASL,EAAaO,UAC1C,CAAEpC,KAAM,WAAYkC,QAAS,2DAGjC,kBAAC,EAAD,CAAQ1D,UAAWrB,EAAK2E,KAAKD,aAAaL,QAC1C,yBAAK/C,UAAWC,IAAO2D,MACrB,yBAAK5D,UAAWC,IAAO4D,gBACrB,6BAAS7D,UAAWC,IAAOwD,SAAUxE,GACrC,2BAAOe,UAAWC,IAAO6D,SACvB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WAhCd","file":"component---src-pages-404-js-ea6020c07eac979499b4.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styles from './styles.module.scss';\n\nconst Header = ({ siteTitle }) => (\n  <div className={styles.headerWrapper}>\n    <div className={styles.header}>\n      <h1 style={{ borderBottom: 'none' }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'black',\n            textDecoration: 'none'\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div style={{ flexGrow: 1 }} />\n      <ul className={styles.headerLinks}>\n        {/* <li>\n          <Link to=\"/projects\">Projects</Link>\n        </li> */}\n        <li>\n          <Link to=\"/hire-me\">Hire Me</Link>\n        </li>\n        <li>\n          <Link to=\"/about-me\">About Me</Link>\n        </li>\n        {/* <li>\n          <Link to=\"/archives\">Archives</Link>\n        </li> */}\n      </ul>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styles from './styles.module.css';\n\nconst SideBarList = ({ items, link, label }) => {\n  return (\n    <div className={styles.sideBarSection}>\n      <h2 className={styles.sideBarLabel}>{label}</h2>\n      <ul style={{ marginLeft: 0 }}>\n        {items.map((item, idx) => (\n          <li className={styles.sideBarEntry} key={idx}>\n            <Link style={{ color: 'inherit' }} to={item.link}>\n              {item.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SideBarList;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport SideBarList from \"./sideBarList\";\n\nconst CategoryList = () => (\n  <StaticQuery\n    query={graphql`\n      {\n        allMarkdownRemark(filter: { fields: { contentType: { eq: \"post\" } } }) {\n          nodes {\n            frontmatter {\n              categories\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const categoriesWithCounts = data.allMarkdownRemark.nodes\n        .filter(node => node.frontmatter.categories)\n        .reduce((accum, node) => {\n          for (const category of node.frontmatter.categories) {\n            const found = accum.findIndex(entry => entry.name === category);\n            if (found !== -1) {\n              accum[found].count++;\n            } else {\n              accum.push({ name: category, count: 1 });\n            }\n          }\n          return accum;\n        }, []);\n\n      const sortedCategories = categoriesWithCounts\n        .sort((a, b) => (a.name > b.name ? 1 : a.name < b.name ? -1 : 0))\n        .map(({ name, count }) => ({\n          name: `${name} (${count})`,\n          link: `categories/${name.split(\" \").join(\"-\")}`\n        }));\n\n      return <SideBarList items={sortedCategories} label=\"categories\" />;\n    }}\n  />\n);\n\nexport default CategoryList;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport SideBarList from \"./sideBarList\";\n\nconst RecentPosts = () => (\n  <StaticQuery\n    query={graphql`\n      {\n        allMarkdownRemark(\n          limit: 5\n          filter: { fields: { contentType: { eq: \"post\" } } }\n          sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n          nodes {\n            frontmatter {\n              title\n              url\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const formattedLinks = data.allMarkdownRemark.nodes.map(node => ({\n        name: node.frontmatter.title,\n        link: node.frontmatter.url\n      }));\n\n      return <SideBarList items={formattedLinks} label=\"Most Recent Posts\" />;\n    }}\n  />\n);\n\nexport default RecentPosts;\n","import React from 'react';\n\nimport SideBarList from './sideBarList';\n\nconst popularPosts = () => {\n  const mostPopular = [\n    {\n      name: 'Scraping the Web with Puppeteer: Lessons Learned',\n      link: 'scraping-the-web-with-puppeteer-lessons-learned'\n    },\n    {\n      name: 'Build Your Own Nested Query String Encoder/Decoder',\n      link: 'build-your-own-nested-query-string-encoder'\n    },\n    { name: 'Build Your Own Regex in Less Than 40 Lines of Code', link: 'build-your-own-regex' },\n    { name: 'Write Your Own React-Redux Connect', link: 'write-your-own-redux-connect' },\n    { name: \"The Hidden Costs of PostgreSQL's JSONB Datatype\", link: 'hidden-costs-of-postgresql-jsonb' }\n  ];\n\n  return <SideBarList items={mostPopular} label=\"Most Popular Posts\" />;\n};\n\nexport default popularPosts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from '../header';\nimport CategoryList from '../categoryList';\nimport RecentPosts from '../recentPosts';\nimport PopularPosts from '../popularPosts';\n\n// import 'normalize.css';\nimport './global.css';\nimport styles from './styles.module.scss';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteMetaDataQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n          }\n        }\n      }\n    `}\n    render={(data, errors) => {\n      const siteMetadata = data.site.siteMetadata;\n      return (\n        <div>\n          <Helmet\n            title={siteMetadata.title}\n            htmlAttributes={{ lang: 'en' }}\n            meta={[\n              { name: 'description', content: siteMetadata.description },\n              { name: 'keywords', content: siteMetadata.keywords },\n              { name: 'viewport', content: 'width=device-width, initial-scale=1, maximum-scale=1' }\n            ]}\n          />\n          <Header siteTitle={data.site.siteMetadata.title} />\n          <div className={styles.main}>\n            <div className={styles.contentWrapper}>\n              <section className={styles.content}>{children}</section>\n              <aside className={styles.sidebar}>\n                <PopularPosts />\n                <RecentPosts />\n                <CategoryList />\n              </aside>\n            </div>\n          </div>\n        </div>\n      );\n    }}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}