{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"\nA client approached me with a puzzling problem:\n\nAt Fraight, we have an omnisearch interface backed by an Elasticsearch datastore. The interface allows users yo type a freetext query and get a list of database records sorted by relevancy. At it's core, this is a simple problem: if the user types in `Joe`, return all people whose name contains the word `Joe`. And indeed, returning all the `Joe's` in the system is trivial; the problem is that we worked hundreds, possibly even thousands of `Joes`. How do we identify the particular `Joe` that we care about?\n\n","frontmatter":{"title":"Optimizing Elasticsearch Score: How to Rank and Differentiate Similar Records","date":"2017-10-11T00:00:00.000Z"}}}]}},"pageContext":{"category":"Elasticsearch"}}